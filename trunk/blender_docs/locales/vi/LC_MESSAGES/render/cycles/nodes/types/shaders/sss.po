# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.79 Manual
# package.
# Hoang Duy Tran <hoangduytran1960@gmail.com>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.79 Manual 2.79\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-10-30 16:31+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: vi\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:5
msgid "Subsurface Scattering"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:10
msgid "Subsurface Scattering Shader."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:12
msgid ""
"The *Subsurface Scattering* node is used to add simple subsurface "
"multiple scattering, for materials such as skin, wax, marble, milk and "
"others. For these materials, rather than light being reflect directly off"
" the surface, it will penetrate the surface and bounce around internally "
"before getting absorbed or leaving the surface at a nearby point."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:17
msgid ""
"How far the color scatters on average can be configured per RGB color "
"channel. For example, for skin, red colors scatter further, which gives "
"distinctive red-colored shadows, and a soft appearance."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:23
msgid "Inputs"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:25
msgid "Color"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:26
msgid ""
"Color of the surface, or physically speaking, the probability that light "
"is reflected for each wavelength."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:27
msgid "Scale"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:28
msgid "Global scale factor for the scattering radius."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:29
msgid "Radius"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:30
msgid ""
"Scattering radius for each RGB color channel, the maximum distance that "
"light can scatter."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:32
msgid "Sharpness"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:32
msgid ""
"Used only with *Cubic* falloff. Values increasing from 0 to 1 prevents "
"softening of sharp edges and reduces unwanted darkening."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:34
msgid "Normal"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:35
msgid ""
"Normal used for shading; if nothing is connected the default shading "
"normal is used."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:46
msgid "Texture Blur"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:37
msgid ""
"How much of the texture will be blurred along with the lighting, mixing "
"the texture at the incoming and outgoing points on the surface. Note that"
" the right choice depends on the texture. Consider for example a texture "
"created from a photograph of skin, in this case the colors will already "
"be pre-blurred and texture blur could be set to 0. Even for hand-painted "
"textures, no blurring or minimal blurring might be appropriate, as a "
"texture artist would likely paint in softening already. One would usually"
" not even know what an unblurred skin texture looks like; we always see "
"it blurred. For a procedural texture on the other hand this option would "
"likely have a higher value."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:49
msgid "Properties"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:73
msgid "Method"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:52
msgid "Rendering method to simulate subsurface scattering."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:55
msgid "Christensen-Burley"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:55
msgid ""
"Is an approximation to physically-based volume scattering. Gives less "
"blurry results than Cubic and Gaussian functions."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:62
msgid "Random Walk"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:58
msgid ""
"Provides the most accurate results for thin and curved objects. This "
"comes at the cost of increased render time or noise for more dense media "
"like skin, but also better geometry detail preservation. Random Walk uses"
" true volumetric scattering inside the mesh, which means that it works "
"best for closed meshes. Overlapping faces and holes in the mesh can cause"
" problems."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:64
msgid "Cubic"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:65
msgid ""
"Is a sharp falloff useful for many simple materials. The function is "
":math:`(radius - x)^3`."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:73
msgid "Gaussian"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:67
msgid ""
"Gives a smoother falloff following a normal distribution, which is "
"particularly useful for more advanced materials that use measured data "
"that was fitted to one or more such Gaussian functions. The function is "
":math:`e^{-8x^2/ radius^2}`, such that the radius roughly matches the "
"maximum falloff distance. To match a given measured variance *v*, set "
":math:`radius = sqrt(16 Ã— v)`."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:76
msgid "Outputs"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:80
msgid "BSSRDF"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:79
msgid ""
":abbr:`BSSRDF (Bidirectional subsurface scattering distribution "
"function)` shader output."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:83
msgid "Examples"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:87
msgid "Random Walk subsurface scattering."
msgstr ""

