# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.79 Manual
# package.
# Hoang Duy Tran <hoangduytran1960@gmail.com>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender 2.79 Manual 2.79\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-10-30 16:31+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: vi\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../manual/game_engine/physics/types/rigid_body.rst:4
msgid "Rigid Body Physics"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:6
msgid ""
"Probably the most common type of object in the Game Engine. It will "
"give/receive collisions and react with a change in its velocity and its "
"rotation. A rigid body ball would begin rotating and roll down (where a "
":doc:`Dynamic </game_engine/physics/types/dynamic>` ball would only hit "
"and slide down the ramp)."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:11
msgid ""
"The idea behind rigid body dynamics is that the mesh does not deform. If "
"you need deformation you will need to either go to :doc:`Soft Body "
"</game_engine/physics/types/soft_body>` or else fake it with animated "
"Actions."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:15
msgid ""
"For more documentation, see the general :doc:`physics page "
"</game_engine/physics/index>`."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:19
#: ../../manual/game_engine/physics/types/rigid_body.rst:207
msgid "Options"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:21
msgid "bpy Access"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:23
msgid ""
"Note that, most of these properties are accessible through the non-BGE "
"scripting API via ``bpy.data.objects[\"ObjectName\"].game``, which is of "
"type ``bpy.types.GameObjectSetting``. This is useful so you can, for "
"example, set a range of objects to have gradated values via a for-loop."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:28
msgid "Actor"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:29
msgid "Enables detection by Near and Radar Sensors."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:30
msgid "Ghost"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:31
msgid ""
"Disables collisions completely, similar to :doc:`No collision "
"</game_engine/physics/types/no_collision>`."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:33
msgid "Invisible"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:33
msgid ""
"Does not display, the same as setting the object to unrendered (such as "
"unchecking the camera icon in the :doc:`Outliner </editors/outliner>`)."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:37
msgid "Use Material Force Field"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:36
msgid ""
"Materials can have physics settings on them as well: Friction, "
"Elasticity, Force Field (positive or negative force), and also Dampening "
"to other materials. When you turn on this checkbox, you are enabling the "
"Material to exhibit this spring force."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:39
msgid "Rotate From Normal"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:40
msgid "Todo."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:43
msgid "No Sleeping"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:42
msgid ""
"Prevents simulation meshes from sleeping. When an object has a linear "
"velocity or angular velocity, it is in motion. It will detect collisions,"
" receive gravity, etc. Once these thresholds are close to zero, it will "
"cease these calculations -- until another object interacts with it wake "
"it up."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:48
msgid "Mass"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:46
msgid ""
"Affects the reaction due to collision between objects -- more massive "
"objects have more inertia. Will also affect material force fields. Will "
"also change behaviors if you are using the suspension and steering "
"portions of Bullet physics."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:57
msgid "Radius"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:53
msgid ""
"If you have the \"Collision Bounds: Sphere\" set explicitly (or "
"implicitly through having the Collision Bounds subpanel unchecked), this "
"will multiply with the Object's (unapplied) Scale. Note that none of the "
"other bounds types are affected. Also note that in the 3D View the "
"display will show this for all types, even though it is only actually "
"used with Sphere."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:62
msgid "Basic"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:63
msgid "Radius= 1.5"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:64
msgid "Unapplied Scale"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:65
msgid "Applied Scale"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:66
#: ../../manual/game_engine/physics/types/rigid_body.rst:126
msgid "Collision Bounds"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:68
msgid "Rolls, radius of 1 BU"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:69
msgid "Rolls, radius of 1.5 BU (after \"popping\" upward)"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:70
msgid "Rolls, radius of 1.5 BU"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:71
msgid "Rolls, radius of 1 BU (!)"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:72
msgid "Default (which is Sphere)"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:74
#: ../../manual/game_engine/physics/types/rigid_body.rst:75
#: ../../manual/game_engine/physics/types/rigid_body.rst:76
#: ../../manual/game_engine/physics/types/rigid_body.rst:77
msgid "Slides, extent of 1 BU"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:78
#: ../../manual/game_engine/physics/types/rigid_body.rst:169
msgid "Box"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:80
#: ../../manual/game_engine/physics/types/rigid_body.rst:81
#: ../../manual/game_engine/physics/types/rigid_body.rst:82
#: ../../manual/game_engine/physics/types/rigid_body.rst:83
msgid "\"\""
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:84
#: ../../manual/game_engine/physics/types/rigid_body.rst:187
msgid "Convex Hull"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:86
#: ../../manual/game_engine/physics/types/rigid_body.rst:87
msgid "Slides, extent of 1 BU (but with more friction than above)"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:88
msgid "Acts insane"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:89
msgid "Slides extent of 1.5 BU"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:90
msgid "Triangle Mesh"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:95
msgid "Form Factor"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:93
msgid ""
"For affecting the Inertia Tensor. The higher the value, the greater the "
"rotational inertia, and thus the more resistant to torque. You might "
"think this is strange, considering Dynamic types do not have torque in "
"response to collisions -- but you can still see this value's effects when"
" you manually apply Torque."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:98
msgid "Anisotropic Friction"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:98
msgid ""
"Isotropic friction is identical at all angles. Anisotropic is "
"directionally-dependent. Here you can vary the coefficients for the three"
" axes individually, or disable friction entirely."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:106
msgid "Velocity"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:101
msgid "Limit the speed of an object."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:104
msgid "Minimum"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:104
msgid ""
"The object is allowed to be at complete rest, but as soon as it "
"accelerates it will immediately jump to the minimum speed."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:106
msgid "Maximum"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:107
msgid "Top speed of the object."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:114
msgid "Damping"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:109
msgid "Increase the \"sluggishness\" of the object."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:111
msgid "Translation"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:112
msgid "Resist movement (0 - 1). At 1 the object is completely immobile."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:114
msgid "Rotation"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:114
msgid ""
"Resist rotation, but not the kind of rotation that comes from a "
"collision. For example, if a Motion Controller applies Torque to an "
"object, this damping will be a factor."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:117
msgid "Lock Translation"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:117
msgid ""
"Seize the object in the world along one or more axes. Note that this is "
"global coordinates, not local or otherwise."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:121
msgid "Lock Rotation"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:120
msgid ""
"Rigid body only -- Same, but for rotation (also with respect to the "
"global coordinates)."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:128
msgid ""
"The first thing you must understand is the idea of the 3D Bounding Box. "
"If you run through all the vertices of a mesh and record the lowest and "
"highest x values, you have found the *x min/max* the complete boundary "
"for all x values within the mesh. Do this again for y and z, then make a "
"rectangular prism out of these values, and you have a *Bounding Box*. "
"This box could be oriented relative globally to the world or locally to "
"the object's rotation."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:136
msgid ""
"Demonstration of a Local Bounding Box (left) and a Global Bounding Box "
"(right)."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:138
msgid "The *x extent*, then, is half of the distance between the x min/max."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:140
msgid ""
"Throughout all of this you must be cognizant of the Object Origin. For "
"the Game engine, the default :kbd:`Shift-Ctrl-Alt-C`, :kbd:`3` or "
":menuselection:`Set Origin --> Origin to Geometry` is unlikely to get the"
" desired placement of the Collision Bounds that you want. Instead, you "
"should generally set the origin by looking at the Tool Shelf after you do"
" the *Set Origin*, and changing the *Center* from *Median Center* to "
"*Bounds Center*. Blender will remember this change for future :kbd"
":`Shift-Ctrl-Alt-C` executions."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:147
msgid ""
"All Collision Bounds are centered on this origin. All boxes are oriented "
"locally, so object rotation matters."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:151
msgid "Setting the origin to Bounds Center instead of Median Center."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:153
msgid ""
"A final introductory comment: When you set the Collision Bounds on an "
"object, Blender will attempt to display a visualization of the bounds in "
"the form of a dotted outline. Currently, there is a bug: *The 3D View* "
"does not display this bounds preview where it actually will be during the"
" game. To see it, go to :menuselection:`Game --> Show Physics "
"Visualization` and look for the white (or green, if sleeping) geometry."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:160
msgid ""
"Now we can explain the various options for the *Collision Bounds* "
"settings:"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:163
msgid "Default"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:163
msgid ""
"For Dynamic and Static objects, it is a Triangle Mesh (see below). For "
"everything else, it is a Sphere (see below)."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:167
msgid "Capsule"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:166
msgid ""
"Which is a cylinder with hemispherical caps, like a pill. Radius of the "
"hemispheres is the greater of the X or Y extent. Height is the Z bounds."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:170
msgid "The X, Y, Z bounding box, as defined above."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:173
msgid "Sphere"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:172
msgid ""
"Radius is defined by the object's scale (visible in the N properties "
"panel) times the physics radius (can be found in :menuselection:`Physics "
"--> Attributes --> Radius`). Note: This is the only bounds that respects "
"the Radius option."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:176
msgid "Cylinder"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:176
msgid "Radius is the greater of the x or y extent. Height is the z bounds."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:179
msgid "Cone"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:179
msgid "Base radius is the greater of the x or y extent. Height is the z bounds."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:182
msgid "Forms a shrink-wrapped, simplified geometry around the object."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:187
msgid "A convex hull sketch."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:190
msgid "Triangle mesh"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:190
msgid ""
"Most expensive, but most precise. Collision will happen with all of "
"triangulated polygons, instead of using a virtual mesh to approximate "
"that collision."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:204
msgid "By Hand"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:193
msgid ""
"This is not an option in the Physics tab's Collision Bounds settings, but"
" a different approach, entirely. You create a second mesh, which is "
"invisible, to be the physics representation. This becomes the parent for "
"your display object. Then, your display object is set to ghost so it does"
" not fight with the parent object. This method allows you to strike a "
"balance between the accuracy of *Triangle Mesh* with the efficiency of "
"some of the others. See the demo of this in the dune buggy to the right."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:203
msgid "Another way to create Collision Bounds -- By hand."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:209
msgid "There are only two options in the Collision Bounds subpanel."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:218
msgid "Margin"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:212
msgid ""
"\"Add extra margin around object for collision detection, small amount "
"required for stability.\" If you find your objects are getting stuck in "
"places they should not, try increasing this to, say, 0.06."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:215
msgid ""
"Sometimes 0.06 is the default (such as on the Default Cube), but "
"sometimes it is not. You have to keep an eye on the setting, or else "
"learn the symptoms so you can respond when it gives you trouble. If you "
"are lazy/paranoid/unsure/diligent/bored, you can always run this on the "
"Python Console to bump all 0.0 margins to 0.06: for ``obj`` in "
"``bpy.data.objects``: ``obj.game.collision_margin = "
"obj.game.collision_margin`` or 0.06"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:226
msgid "Compound"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:221
msgid ""
"\"Add children to form compound collision object.\" Basically, if you "
"have a child object and do not have this enabled, the child's collisions "
"will not have an effect on that object \"family\" (though it will still "
"push other objects around). If you do have it checked, the parent's "
"physics will respond to the child's collision (thus updating the whole "
"family)."
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:229
msgid "Create Obstacle"
msgstr ""

#: ../../manual/game_engine/physics/types/rigid_body.rst:231
msgid "Todo"
msgstr ""

