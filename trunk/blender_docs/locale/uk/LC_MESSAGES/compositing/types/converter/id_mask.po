#
msgid ""
msgstr "Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: urko <urkokul@gmail.com>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Generator: Poedit 2.0.2\n"
"Language: uk\n"

#: ../../manual/compositing/types/converter/id_mask.rst:4
msgid "ID Mask Node"
msgstr ""

#: ../../manual/compositing/types/converter/id_mask.rst:9
msgid "ID Mask Node."
msgstr ""

#: ../../manual/compositing/types/converter/id_mask.rst:12
msgid ""
"The *ID Mask Node* can be used to access an alpha mask per object or per "
"material."
msgstr ""

#: ../../manual/compositing/types/converter/id_mask.rst:16
msgid "Inputs"
msgstr ""

#: ../../manual/compositing/types/converter/id_mask.rst:22
msgid "ID value"
msgstr ""

#: ../../manual/compositing/types/converter/id_mask.rst:19
msgid ""
"Input for the *Object Index* or *Material Index* render pass. Which is an"
" output of the :doc:`Render Layers node "
"</compositing/types/input/render_layers>` or the :doc:`Image node "
"</compositing/types/input/render_layers>` with a multilayer format."
msgstr ""

#: ../../manual/compositing/types/converter/id_mask.rst:25
msgid "Properties"
msgstr ""

#: ../../manual/compositing/types/converter/id_mask.rst:27
msgid "Index"
msgstr ""

#: ../../manual/compositing/types/converter/id_mask.rst:28
msgid "Selection of the preciously specified index."
msgstr ""

#: ../../manual/compositing/types/converter/id_mask.rst:31
msgid "Anti-Aliased"
msgstr ""

#: ../../manual/compositing/types/converter/id_mask.rst:30
msgid "This post-process function refines the mask. See :term:`anti-aliasing`."
msgstr ""

#: ../../manual/compositing/types/converter/id_mask.rst:34
msgid "Outputs"
msgstr ""

#: ../../manual/compositing/types/converter/id_mask.rst:38
msgid "Alpha"
msgstr ""

#: ../../manual/compositing/types/converter/id_mask.rst:37
msgid ""
"The mask is white where the object is and black where it is not. If the "
"object is transparent, the alpha mask represent that with gray values."
msgstr ""

#: ../../manual/compositing/types/converter/id_mask.rst:42
msgid ""
"In Blender Internal if a transparent object in front of another, the mask"
" will not reflect partial visibility of the object behind."
msgstr ""

#: ../../manual/compositing/types/converter/id_mask.rst:47
msgid "Setup"
msgstr ""

#: ../../manual/compositing/types/converter/id_mask.rst:49
msgid ""
"An index can be specify for any object or material in the scene. The "
"Object Index can be set in Properties Editor :menuselection:`Object --> "
"Relations --> Pass Index` and :menuselection:`Material --> Options --> "
"Pass Index` for the Material Index. To be accessible after rendering, "
"*Object Index* or *Material Index* render pass has to be enabled."
msgstr ""

#: ../../manual/compositing/types/converter/id_mask.rst:56
msgid "Object Pass Index."
msgstr ""

#: ../../manual/compositing/types/converter/id_mask.rst:60
msgid "Example"
msgstr ""

#: ../../manual/compositing/types/converter/id_mask.rst:62
msgid ""
"In this example, the left rear red cube is assigned Pass Index 1, and the"
" right cube Pass Index 2. Where the two cubes intersect, there is going "
"to be noticeable pixelation because they come together at a sharp angle "
"and are different colors. Using the mask from object 1, which is smoothed"
" (antialiased) at the edges, we use a *Mix Node* set on *Multiply* to "
"multiply the smoothed edges of the image, thus removing those nasty "
"lines, thus, being smoothed out."
msgstr ""

#: ../../manual/compositing/types/converter/id_mask.rst:70
msgid "Id Mask node example."
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "Setting an Object Index"
#~ msgstr ""

#~ msgid "Object Index"
#~ msgstr ""

#~ msgid "Setting an Object Index."
#~ msgstr ""

#~ msgid "Input"
#~ msgstr ""

#~ msgid "Output"
#~ msgstr ""

#~ msgid "Example."
#~ msgstr ""

#~ msgid ""
#~ "Input for the *Object Index* or "
#~ "*Material Index* render pass. Which is"
#~ " an output of the :doc:`RenderLayers "
#~ "node </compositing/types/input/render_layers>` or "
#~ "the :doc:`Image node "
#~ "</compositing/types/input/render_layers>` with a "
#~ "multilayer format."
#~ msgstr ""

#~ msgid ""
#~ "In this example, the left rear red"
#~ " cube is assigned PassIndex 1, and"
#~ " the right cube PassIndex 2. Where"
#~ " the two cubes intersect, there is"
#~ " going to be noticeable pixelation "
#~ "because they come together at a "
#~ "sharp angle and are different colors."
#~ " Using the mask from object 1, "
#~ "which is smoothed (antialiased) at the"
#~ " edges, we use a *Mix Node* set"
#~ " on *Multiply* to multiply the "
#~ "smoothed edges of the image, thus "
#~ "removing those nasty lines, thus, being"
#~ " smoothed out."
#~ msgstr ""

#~ msgid ""
#~ "This node can be used to access"
#~ " an alpha mask per object or "
#~ "per material."
#~ msgstr ""

