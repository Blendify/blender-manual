# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is public domain as CC0
# This file is distributed under the same license as the Blender Reference
# Manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr "Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: urko <urkokul@gmail.com>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Generator: Poedit 2.0.2\n"
"Language: uk\n"

#: ../../manual/compositing/types/matte/keying.rst:4
msgid "Keying Node"
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:9
msgid "Keying Node."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:11
msgid ""
"The *Keying* node is an one-stop-shop for \"green screen\" / \"blue "
"screen\" removal. It performs both chroma keying to remove the backdrop "
"and despill to correct color cast from the backdrop. Additionally, you "
"can perform common operations used to tweak the resulting matte."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:17
msgid "Inputs"
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:19
#: ../../manual/compositing/types/matte/keying.rst:93
msgid "Image"
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:20
msgid "Standard image input."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:23
msgid "Key Color"
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:22
msgid ""
"The color of content to be removed. This may be a single color, or a "
"reference image such as generated by the :doc:`Keying Screen Node "
"</compositing/types/matte/keying_screen>`."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:26
msgid "Garbage Matte"
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:26
msgid ""
"An optional mask of area(s) to always *exclude* from the output. This is "
"removed from the chroma key generated matte."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:31
msgid "Core Matte"
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:29
msgid ""
"An optional mask of area(s) to always *include* in the output. This is "
"merged with the chroma key generated matte."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:34
msgid "Properties"
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:38
msgid "Pre Blur"
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:37
msgid ""
"Reduce the effects of color noise in the image by blurring only color by "
"the given amount, leaving luminosity intact. This will affect matte "
"calculation only, not the result image."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:44
msgid "Screen Balance"
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:41
msgid ""
"This is the balance between color channels compared with the key color. "
"0.5 will average the other channels (red and blue in the case of a green "
"screen)."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:44
msgid ""
"This may be tweaked in tandem with *Clip Black* and *Clip White* while "
"checking the *Matte* output to create a mask with optimal separation."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:49
msgid "Despill Factor"
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:47
msgid ""
"Controls how much color bleed from the key color is removed from the "
"input image: 0 means no despilling, 1 means all possible spilling will be"
" removed. The underlying implementation is the same as adjusting the "
"*Unspill* amount of the :doc:`Color Spill Node "
"</compositing/types/matte/color_spill_key>`."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:54
msgid "Despill Balance"
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:52
msgid ""
"This controls how the color chanels are compared when computing spill, "
"affecting the hue and shade of the corrected colors. It is similar to "
"setting the *Limiting Channel* in the :doc:`Color Spill Node "
"</compositing/types/matte/color_spill_key>`."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:56
msgid "Edge Kernel Radius"
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:57
msgid "Defines the radius in pixel used to detect an edge."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:60
msgid "Edge Kernel Tolerance"
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:59
msgid ""
"Defines threshold used to check if pixels in radius are the same as "
"current pixel: If the difference between pixel colors is higher than this"
" threshold then the point will be considered an edge."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:68
msgid "Clip Black"
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:63
msgid ""
"This sets the threshold for what becomes fully transparent in the output "
"(black in the matte). It should be set as low as possible. Uneven "
"backdrops will require this value to be increased. Use of the "
":doc:`Keying Screen Node </compositing/types/matte/keying_screen>` can "
"help keep this value low. You may also use a *Garbage Matte* to exclude "
"problematic areas."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:69
#: ../../manual/compositing/types/matte/keying.rst:76
msgid ""
"This value does not impact areas detected as edges to ensure edge detail "
"is preserved."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:75
msgid "Clip White"
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:71
msgid ""
"This sets the threshold for what becomes fully opaque in the output "
"(white in the matte). It should be set as high as possible. Colors close "
"to green in the foreground may require lowing this and/or adjusting the "
"*Screen Balance*. Particularly problematic parts can fixed with a *Core "
"Matte* instead of a low *Clip White*."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:80
msgid "Dilate/Erode"
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:78
msgid ""
"Enlarge (positive numbers) or shrink (negative numbers) the matte by the "
"specified number of pixels. This is similar to using the "
":doc:`Dilate/Erode Node </compositing/types/filter/dilate_erode>` on the "
"matte."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:81
msgid ""
"This a simple way to include more or less along the edges of the matte, "
"particularly combined with *Post Blur*."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:82
msgid "Feather Falloff"
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:83
msgid ""
"The rate of fall off at the edges of the matte when feathering, to manage"
" edge detail."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:84
msgid "Feather Distance"
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:85
msgid ""
"Controls how much the matte is feathered inwards (negative number) or "
"outwards (positive number)."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:88
msgid "Post Blur"
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:87
msgid ""
"Make the matte less sharp, for smoother transitions to the background and"
" noise reduction."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:91
msgid "Outputs"
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:94
msgid ""
"Processed image with the *Matte* applied to the images's :term:`alpha "
"channel`."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:97
msgid "Matte"
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:96
msgid ""
"Output matte to use for checking the quality of the key, or to manually "
"apply using a :doc:`Set Alpha Node "
"</compositing/types/converter/set_alpha>` or :doc:`Mix Node "
"</compositing/types/color/mix>`."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:101
msgid "Edges"
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:100
msgid ""
"Shows what edges were detected on the matte. Useful for adjusting the "
"*Edge Kernel Radius* and *Edge Kernel Tolerance*."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:105
msgid ""
"If there are problems with the edges of the matte, it may help to start "
"with adjusting the *Edge Kernel* parameters before adjusting feathering. "
"Detected edges are not subject to *Clip Black* / *Clip White* thresholds "
"to preserve fine edge detail. You can check edge detection by connecting "
"a :doc:`Viewer Node </compositing/types/output/viewer>` to the *Edges* "
"output."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:111
msgid ""
"Sharper detected edges (smaller *Edge Kernel Radius*, like 2 / larger "
"*Edge Kernel Tolerance*, like 0.4) will create a sharper matte, but may "
"loose some detail like stray hairs. A sharp matte is good, but "
"disappearing or flickering hairs are distracting."
msgstr ""

#: ../../manual/compositing/types/matte/keying.rst:115
msgid ""
"Fat edges (larger *Edge Kernel Radius*, like 8 / smaller *Edge Kernel "
"Tolerance*, like 0.05) will capture more edge detail, but may also "
"produce a halo around the subject. The halo can be adjusted with "
"*Feather* controls along with *Dilate/Erode*."
msgstr ""

#~ msgid "TODO - see: https://developer.blender.org/T43469"
#~ msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid ""
#~ "Reduce the effects of color noise "
#~ "in the image by blurring only "
#~ "color by the given amount, leaving "
#~ "luminocity intact. This will affect "
#~ "matte calculation only, not the result"
#~ " image."
#~ msgstr ""

