# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.78 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
# urko <urkokul@gmail.com>, 2017.
#
msgid ""
msgstr "Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: urko <urkokul@gmail.com>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Generator: Poedit 2.0.2\n"
"Language: uk\n"

#: ../../manual/pipeline/bam.rst:5
msgid "BAM Asset Manager"
msgstr ""

#: ../../manual/pipeline/bam.rst:7
msgid ""
"Refactoring linked .blend files is a common practice in a production "
"environment. While some basic operations can be accomplished within Blender, "
"sometimes it is more practical to perform them on the command line or via a "
"script. During the production of Cosmos Laundromat (Gooseberry Open Movie "
"Project) the *BAM Asset Manager* (BAM) was developed. The original scope of "
"BAM included client-server asset management tools going beyond Blender, but "
"it was later refocused on core utilities to perform two operations:"
msgstr ""

#: ../../manual/pipeline/bam.rst:15
msgid "Blend-file packing"
msgstr ""

#: ../../manual/pipeline/bam.rst:16
msgid "Automatic dependencies remapping"
msgstr ""

#: ../../manual/pipeline/bam.rst:18
msgid "The following section of the manual focuses on how to use BAM."
msgstr ""

#: ../../manual/pipeline/bam.rst:24
msgid "Installing BAM"
msgstr ""

#: ../../manual/pipeline/bam.rst:26
msgid ""
"BAM is a standalone Python package, that can be run on any system without "
"any particular configuration. The only requirement is Python 3 (and pip, the "
"Python package manager, to easily install BAM)."
msgstr ""

#: ../../manual/pipeline/bam.rst:29
msgid ""
"Windows, Linux and macOS provide different ways to install Python 3 and pip. "
"Check out the online docs to learn more about a specific platform."
msgstr ""

#: ../../manual/pipeline/bam.rst:32
msgid ""
"Once Python 3 and pip are available, BAM can be installed via command line "
"by typing:"
msgstr ""

#: ../../manual/pipeline/bam.rst:38
msgid ""
"After a successful installation, the `bam` command will be available. By "
"typing it and pressing the Enter key, all the available subcommands will be "
"displayed."
msgstr ""

#: ../../manual/pipeline/bam.rst:43
msgid "bam pack"
msgstr ""

#: ../../manual/pipeline/bam.rst:45
msgid ""
"This command is used for packing a ``.blend`` file and *all* its "
"dependencies into a ``.zip`` file for redistribution. ::"
msgstr ""

#: ../../manual/pipeline/bam.rst:51
msgid ""
"You can simply pack a blend file like this to create a zip-file of the same "
"name."
msgstr ""

#: ../../manual/pipeline/bam.rst:57
msgid ""
"You may also want to give an explicit output directory. The example shows "
"how to pack a blend with maximum compression for online downloads"
msgstr ""

#: ../../manual/pipeline/bam.rst:64
msgid ""
"The command provides several options to adapt to different workflows (final "
"distribution, partial extraction, rendering)."
msgstr ""

#: ../../manual/pipeline/bam.rst:67
msgid "``-o``, ``--output`` ``<FILE>``"
msgstr ""

#: ../../manual/pipeline/bam.rst:68
msgid "Output file or a directory when multiple inputs are passed."
msgstr ""

#: ../../manual/pipeline/bam.rst:69
msgid "``-m``, ``--mode`` ``<MODE>``"
msgstr ""

#: ../../manual/pipeline/bam.rst:70
msgid ""
"Output file or a directory when multiple inputs are passed. Possible "
"choices: ``ZIP``, ``FILE``."
msgstr ""

#: ../../manual/pipeline/bam.rst:76
msgid "``-e``, ``--exclude`` ``<PATTERN(S)>``"
msgstr ""

#: ../../manual/pipeline/bam.rst:72
msgid "Optionally exclude files from the pack."
msgstr ""

#: ../../manual/pipeline/bam.rst:74
msgid "``--exclude=\"*.png\"``"
msgstr ""

#: ../../manual/pipeline/bam.rst:75
msgid "Using Unix shell-style wildcards *(case insensitive)*."
msgstr ""

#: ../../manual/pipeline/bam.rst:76
msgid "``--exclude=\"*.txt;*.avi;*.wav\"``"
msgstr ""

#: ../../manual/pipeline/bam.rst:77
msgid "Multiple patterns can be passed using the ``;`` separator."
msgstr ""

#: ../../manual/pipeline/bam.rst:78
msgid "``-a``, ``--all-deps``"
msgstr ""

#: ../../manual/pipeline/bam.rst:79
msgid "Follow all dependencies (unused indirect dependencies too)."
msgstr ""

#: ../../manual/pipeline/bam.rst:80
msgid "``-q``, ``--quiet``"
msgstr ""

#: ../../manual/pipeline/bam.rst:81
msgid "Suppress status output."
msgstr ""

#: ../../manual/pipeline/bam.rst:83
msgid "``-c``, ``--compress`` ``<LEVEL>``"
msgstr ""

#: ../../manual/pipeline/bam.rst:83
msgid ""
"Compression level for resulting archive. Possible choices: ``default``, "
"``fast``, ``best``, ``store``."
msgstr ""

#: ../../manual/pipeline/bam.rst:86
msgid "``--repo`` ``<DIR PATH>``"
msgstr ""

#: ../../manual/pipeline/bam.rst:86
msgid ""
"Specify a \"root\" path from where to pack the selected file. This allows "
"for the creation of a sparse copy of the production tree, without any "
"remapping."
msgstr ""

#: ../../manual/pipeline/bam.rst:90
msgid "``--warn-external``"
msgstr ""

#: ../../manual/pipeline/bam.rst:89
msgid "Report external libraries errors (missing paths)."
msgstr ""

#: ../../manual/pipeline/bam.rst:93
msgid "Examples"
msgstr "Приклади"

#: ../../manual/pipeline/bam.rst:95
msgid ""
"Consider the following directory layout, and in particular the file *01_01_A."
"lighting.blend* with its linked libraries."
msgstr ""

#: ../../manual/pipeline/bam.rst:112
msgid ""
"Once we run ``bam pack /scenes/01-opening/01_01_A.lighting.blend`` we obtain "
"a *01_01_A.lighting.zip* inside of which we find the following structure."
msgstr ""

#: ../../manual/pipeline/bam.rst:127
msgid ""
"Note how all paths have been remapped relative to the placement of *01_01_A."
"lighting.blend* in the root of the output. If we run ``bam pack /scenes/01-"
"opening/01_01_A.lighting.blend --repo ~/agent327``, the output will be "
"different."
msgstr ""

#: ../../manual/pipeline/bam.rst:144
msgid ""
"In this case no path is remapped, and we simply strip out any file that is "
"not referenced as a direct or indirect dependency of *01_01_A.lighting."
"blend*. This is effectively a sparse copy of the original production tree."
msgstr ""

#: ../../manual/pipeline/bam.rst:150
msgid "bam remap"
msgstr ""

#: ../../manual/pipeline/bam.rst:152
msgid "Remap blend file paths::"
msgstr ""

#: ../../manual/pipeline/bam.rst:156
msgid "This command is a three step process:"
msgstr ""

#: ../../manual/pipeline/bam.rst:158
msgid ""
"First run ``bam remap start .`` which stores the current state of your "
"project (recursively)."
msgstr ""

#: ../../manual/pipeline/bam.rst:159
msgid "Then re-arrange the files on the filesystem (rename, relocate)."
msgstr ""

#: ../../manual/pipeline/bam.rst:160
msgid ""
"Finally run ``bam remap finish`` to apply the changes, updating the ``."
"blend`` files internal paths."
msgstr ""

#: ../../manual/pipeline/bam.rst:174
msgid ""
"Remapping creates a file called ``bam_remap.data`` in the current directory. "
"You can relocate the entire project to a new location but on executing "
"``finish``, this file must be accessible from the current directory."
msgstr ""

#: ../../manual/pipeline/bam.rst:180
msgid ""
"This command depends on files unique contents, take care not to modify the "
"files once remap is started."
msgstr ""

#: ../../manual/pipeline/bam.rst:185
msgid "Subcommands"
msgstr ""

#: ../../manual/pipeline/bam.rst:188
msgid "remap start"
msgstr ""

#: ../../manual/pipeline/bam.rst:190
msgid "Start remapping the blend files::"
msgstr ""

#: ../../manual/pipeline/bam.rst:197 ../../manual/pipeline/bam.rst:212
#: ../../manual/pipeline/bam.rst:223
msgid "``-j``, ``--json``"
msgstr ""

#: ../../manual/pipeline/bam.rst:196 ../../manual/pipeline/bam.rst:211
#: ../../manual/pipeline/bam.rst:222
msgid "Generate JSON output."
msgstr ""

#: ../../manual/pipeline/bam.rst:200
msgid "remap finish"
msgstr ""

#: ../../manual/pipeline/bam.rst:202
msgid "Finish remapping the blend files::"
msgstr ""

#: ../../manual/pipeline/bam.rst:206
msgid "``-r``, ``--force-relative``"
msgstr ""

#: ../../manual/pipeline/bam.rst:207
msgid ""
"Make all remapped paths relative (even if they were originally absolute)."
msgstr ""

#: ../../manual/pipeline/bam.rst:208
msgid "``-d``, ``--dry-run``"
msgstr ""

#: ../../manual/pipeline/bam.rst:209
msgid "Just print output as if the paths are being run."
msgstr ""

#: ../../manual/pipeline/bam.rst:215
msgid "remap reset"
msgstr ""

#: ../../manual/pipeline/bam.rst:217
msgid "Cancel path remapping::"
msgstr ""
