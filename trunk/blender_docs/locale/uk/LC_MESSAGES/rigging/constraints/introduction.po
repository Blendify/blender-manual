#
# urko <urkokul@gmail.com>, 2016, 2017.
#
msgid ""
msgstr "Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: urko <urkokul@gmail.com>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Generator: Poedit 2.0.2\n"
"Language: uk\n"

#: ../../manual/rigging/constraints/introduction.rst:4
msgid "Introduction"
msgstr "Вступ"

#: ../../manual/rigging/constraints/introduction.rst:6
msgid ""
"Constraints are a way to control an object's properties (e.g. its location, "
"rotation, scale), using either plain static values (like the :doc:`\"limit\" "
"ones </rigging/constraints/transform/limit_location>`), or (an)other object, "
"called \"target\" (like e.g. the :doc:`\"copy\" ones </rigging/constraints/"
"transform/copy_location>`)."
msgstr ""

#: ../../manual/rigging/constraints/introduction.rst:12
msgid ""
"Even though constraints are useful in static projects, their main usage is "
"obviously in animation."
msgstr ""

#: ../../manual/rigging/constraints/introduction.rst:15
msgid ""
"You can control an object's animation through the targets used by its "
"constraints (this is a form of indirect animation). Indeed, these targets "
"can then control the constraint's owner's properties, and hence, animating "
"the targets will indirectly animate the owner."
msgstr ""

#: ../../manual/rigging/constraints/introduction.rst:19
msgid ""
"You can animate constraints' settings. e.g. the *Influence* or when using an "
"armature's bone as target, animate where along this bone (between root and "
"tip) lays the real target point."
msgstr ""

#: ../../manual/rigging/constraints/introduction.rst:23
msgid ""
"They can make the eyes of a tennis player track a tennis ball bouncing "
"across the court, allow the wheels on a bus to all rotate together, help a "
"dinosaur's legs bend at the knee automatically, and make it easy for a hand "
"to grip the hilt of a sword and the sword to swing with the hand."
msgstr ""

#: ../../manual/rigging/constraints/introduction.rst:28
msgid ""
"Constraints, in Blender, work with :term:`Objects <Object>` and :term:`Bones "
"<Bone>`. Read about using constraints in rigging in the :doc:`Armature "
"chapter </rigging/armatures/posing/bone_constraints/index>`."
msgstr ""

#: ../../manual/rigging/constraints/introduction.rst:34
msgid "Object Constraints."
msgstr ""

#: ../../manual/rigging/constraints/introduction.rst:38
msgid "Bone Constraints."
msgstr ""

#: ../../manual/rigging/constraints/introduction.rst:40
msgid ""
"Constraints work in combination with each other to form a Constraint Stack."
msgstr ""

#: ../../manual/rigging/constraints/introduction.rst:44
msgid "The Constraint Stack is evaluated from top to bottom."
msgstr ""

#: ../../manual/rigging/constraints/introduction.rst:48
msgid "Tips"
msgstr ""

#: ../../manual/rigging/constraints/introduction.rst:50
msgid ""
"Constraints are a fantastic way to add sophistication and complexity to a "
"rig."
msgstr ""

#: ../../manual/rigging/constraints/introduction.rst:52
msgid ""
"But be careful not to rush in too quickly, piling up constraint upon "
"constraint until you lose all sense of how they interact with each other."
msgstr ""

#: ../../manual/rigging/constraints/introduction.rst:55
msgid ""
"Start simply. Get to know a single constraint inside and out. :doc:`/rigging/"
"constraints/transform/copy_location` is a good first constraint to explore "
"it also has an animation example. Take the time to understand every "
"fundamental concept behind it, and the other constraints will make far more "
"sense."
msgstr ""
