# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.78 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr "Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: urko <urkokul@gmail.com>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Generator: Poedit 2.0.2\n"
"Language: uk\n"

#: ../../manual/rigging/armatures/skinning/parenting.rst:4
msgid "Armature Deform Parent"
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst:6
msgid "Reference"
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst
msgid "Mode:     Object Mode and Pose Mode"
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst
msgid "Menu:     :menuselection:`Armature --> Parent --> Armature Deform`"
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst
msgid "Hotkey:   :kbd:`Ctrl-P`"
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst:13
msgid ""
"Armature Deform Parenting is a way of creating and setting up an "
":doc:`Armature Modifier </modeling/modifiers/deform/armature>`."
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst:16
msgid ""
"To use Armature Deform Parenting you must first select all the child "
"objects that will be influenced by the armature and then lastly, select "
"the armature object itself. Once all the child objects and the armature "
"are selected press :kbd:`Ctrl-P` and select Armature Deform in the Set "
"Parent To pop-up menu."
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst:21
msgid ""
"The armature will be the parent object of all the other child objects and"
" each child object will have a Armature Modifier with the armature "
"associated (*Object* field)."
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst:26
msgid "Bone associated with Mesh Object."
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst:30
msgid "With Empty Groups"
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst:32
msgid ""
"When parenting it will create empty :doc:`vertex groups "
"</modeling/meshes/properties/vertex_groups/index>` on the child objects "
"(if they do not already exist) for and named after each deforming bone in"
" the armature. The newly created vertex groups will be empty this means "
"they will not have any weights assigned. Vertex groups will only be "
"created for bones which are setup as deforming "
"(:menuselection:`Properties Editor --> Bone --> Deform Panel`)."
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst:38
msgid ""
"You can then manually select the vertices and assign them to a particular"
" vertex group of your choosing to have bones in the armature influence "
"them."
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst:41
msgid ""
"Choose this option if you have already created (and weighted) all the "
"vertex groups the mesh requires."
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst:45
msgid "Example"
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst:47
msgid ""
"For example, if you have an armature which consists of three bones named "
"\"BoneA\", \"BoneB\" and \"BoneC\" and cube mesh called \"Cube\". If you "
"parent the cube to the armature the cube will get three new vertex groups"
" created on it called \"BoneA\", \"BoneB\" and \"BoneC\". Notice that "
"each vertex group is empty."
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst:54
msgid "Cube in Edit Mode using Armature Deform with empty groups."
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst:58
msgid "With Automatic Weights"
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst:60
msgid ""
"With Automatic Weights parenting works similar to With Empty Groups, but "
"it will not leave the vertex groups empty. It calculates how much "
"influence a particular bone would have on vertices based on the distance "
"from those vertices to a particular bone (\"bone heat\" algorithm). This "
"influence will be assigned as weights in the vertex groups."
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst:65
msgid ""
"This method of parenting is certainly easier setup but it can often lead "
"to armatures which do not deform child objects in ways you would want. "
"Overlaps can occur when it comes to determining which bones should "
"influence certain vertices when calculating influences for more complex "
"armatures and child objects. Symptoms of this confusion are that when "
"transforming the armature in *Pose Mode* parts of the child objects do "
"not deform as you expect; If Blender does not give you the results you "
"require you will have to manually alter the weights of vertices in "
"relation to the vertex groups they belong to and have influence in."
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst:74
msgid "With Envelope Weights"
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst:76
msgid ""
"Works in a similar way to With Automatic Weights. The difference is that "
"the influences are calculated based on the :ref:`Bone Envelopes "
"<armature-bones-envelope>` settings. It will assign to each vertex groups"
" the vertices that are inside its bone's influence volume, weighted "
"depending on their distance to this bone."
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst:81
msgid ""
"This means newly included/excluded vertices or new envelope settings will"
" not be taken into account. You will have to apply Armature Deform With "
"Envelope Weights parenting again."
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst:86
msgid ""
"If want the envelope setting to be used instantly bind the Armature "
"Modifier to *Bone Envelopes*."
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst:90
msgid "Two sets of Armatures each with three bones."
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst:94
msgid ""
"If you had defined vertex groups using same names as skinned bones, their"
" content will be completely overridden by both Automatic and Envelope "
"Weights. In this case With Empty Groups could be used instead."
msgstr ""

#: ../../manual/rigging/armatures/skinning/parenting.rst:100
msgid ":ref:`weight-painting-bones`."
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "Single Armature Bone with various different Bone Envelope sizes."
#~ msgstr ""

#~ msgid "Envelope distance fields highlighted."
#~ msgstr ""

#~ msgid "Three Armature Bones all using Envelope Weight."
#~ msgstr ""

#~ msgid ""
#~ "In Blender Armature Object Types are "
#~ "usually used to associate certain bones"
#~ " of an Armature to certain parts "
#~ "of a Mesh Object Types Mesh "
#~ "Geometry. You are then able to "
#~ "move the Armature Bones and the "
#~ "Mesh Object will deform."
#~ msgstr ""

#~ msgid ""
#~ "Armature Deform Parenting is one of "
#~ "the most flexible ways of associating"
#~ " Bones in an Armature to another "
#~ "Object, it gives a lot of freedom"
#~ " but that comes at the price of"
#~ " a little complexity, as there are"
#~ " multiple steps involved in setting "
#~ "up *Armature Deform Parenting* such that"
#~ " deformations are actually carried out."
#~ msgstr ""

#~ msgid ""
#~ "Blender has several different ways of"
#~ " Parenting an Armature to an object,"
#~ " most of them can automate several"
#~ " of the steps involved, but all "
#~ "of them ultimately do all the "
#~ "steps we describe for Armature Deform"
#~ " Parenting."
#~ msgstr ""

#~ msgid ""
#~ "Using the Armature Deform Parenting "
#~ "operator is the first step in "
#~ "setting up the relationship between an"
#~ " Armature Object and its Child "
#~ "Objects."
#~ msgstr ""

#~ msgid ""
#~ "To use Armature Deform Parenting you "
#~ "must first select all the Child "
#~ "Objects that will be influenced by "
#~ "the Armature and then lastly, select "
#~ "the Armature Object itself. Once all "
#~ "the Child Objects and the Armature "
#~ "Object are selected press :kbd:`Ctrl-P` "
#~ "and select Armature Deform in the "
#~ "Set Parent To pop-up menu."
#~ msgstr ""

#~ msgid "Set Parent To menu with Armature Deform Parenting option highlighted."
#~ msgstr ""

#~ msgid ""
#~ "Once this is done the Armature "
#~ "Object will be the Parent Object "
#~ "of all the other Child Objects, "
#~ "also we have informed Blender that "
#~ "the Bones of the Armature Object "
#~ "can be associated with specific parts"
#~ " of the Child Objects so that "
#~ "they can be directly manipulated by "
#~ "the Bones."
#~ msgstr ""

#~ msgid ""
#~ "At this point however, all Blender "
#~ "knows is that the Bones of the "
#~ "Armature could be used to alter "
#~ "the Child Objects, we have not yet"
#~ " told Blender which Bones can alter"
#~ " which Child Objects or by how "
#~ "much."
#~ msgstr ""

#~ msgid ""
#~ "To do that we must individually "
#~ "select each Child Object individually "
#~ "and toggle into Edit Mode on that"
#~ " Child Object. Once in Edit Mode "
#~ "we can then select the vertices we"
#~ " want to be influenced by the "
#~ "Bones in the Armature. Then with "
#~ "the vertices still selected navigate to"
#~ " :menuselection:`Properties Editor --> Object "
#~ "Data --> Vertex Groups` and create "
#~ "a new Vertex Group with the same"
#~ " name as the Bone that you want"
#~ " the selected vertices to be "
#~ "influenced by."
#~ msgstr ""

#~ msgid ""
#~ "Once the Vertex Group has been "
#~ "created we then assign the selected "
#~ "vertices to the Vertex Group by "
#~ "clicking the Assign Button. By default"
#~ " when selected vertices are assigned "
#~ "to a Vertex Group they will have"
#~ " an Influence Weight of 1.0 This "
#~ "means that they are fully influenced "
#~ "when a Bone they are associated "
#~ "with is moved, if the Influence "
#~ "Weight had been 0.5 then when the"
#~ " bone moves the vertices would only"
#~ " move half as much."
#~ msgstr ""

#~ msgid ""
#~ "Vertex groups panel with Assign Button"
#~ " and influence Weight Slider highlighted."
#~ msgstr ""

#~ msgid ""
#~ "Once all these steps have been "
#~ "carried out, the Bones of the "
#~ "Armature Object should be associated "
#~ "with the Vertex Groups with the "
#~ "same names as the Bones. You can"
#~ " then select the Armature Object and"
#~ " switch to Pose Mode in the "
#~ ":menuselection:`3D View Editor Header --> "
#~ "Mode Select` menu."
#~ msgstr ""

#~ msgid "Armature Bone in Pose Mode affecting the Mesh Object."
#~ msgstr ""

#~ msgid "The bone is highlighted in Cyan."
#~ msgstr ""

#~ msgid ""
#~ "Once in Pose Mode transforming one "
#~ "of the Bones of the Armature that"
#~ " has been associated with vertices of"
#~ " an object will result in those "
#~ "vertices also being transformed."
#~ msgstr ""

#~ msgid "Armature Deform Parent With Empty Groups"
#~ msgstr ""

#~ msgid ""
#~ "The Armature Deform With Empty Groups"
#~ " parenting method works in almost the"
#~ " same way as Armature Deform "
#~ "parenting with one difference. That "
#~ "difference is that when you parent "
#~ "a Child Object to an Armature "
#~ "Object the names of the bones in"
#~ " the armature are copied to the "
#~ "Child Objects in the form of newly"
#~ " created Vertex Groups, one for each"
#~ " different deforming armature bone name."
#~ " The newly created Vertex Groups will"
#~ " be empty this means they will "
#~ "not have any vertices assigned to "
#~ "those Vertex Groups. You still must "
#~ "manually select the vertices and assign"
#~ " them to a particular Vertex Group"
#~ " of your choosing to have bones "
#~ "in the armature influence them."
#~ msgstr ""

#~ msgid ""
#~ "For example, if you have an "
#~ "Armature Object which consists of three"
#~ " bones named \"BoneA\", \"BoneB\" and "
#~ "\"BoneC\" and Cube Mesh Object type "
#~ "called \"Cube\". If you parent the "
#~ "Cube Child Object to the Armature "
#~ "Parent Object the Cube will get "
#~ "three new Vertex Groups created on "
#~ "it called \"BoneA\", \"BoneB\" and "
#~ "\"BoneC\". Notice that each Vertex Group"
#~ " is empty."
#~ msgstr ""

#~ msgid ""
#~ "Bones in an Armature can be "
#~ "generally classified into two different "
#~ "types:"
#~ msgstr ""

#~ msgid "Deforming Bones"
#~ msgstr ""

#~ msgid "Control Bones"
#~ msgstr ""

#~ msgid ""
#~ "Are bones which when transformed will"
#~ " result in vertices associated with "
#~ "them also transforming in a similar "
#~ "way. Deforming Bones are directly "
#~ "involved in altering the positions of"
#~ " vertices associated with their bones."
#~ msgstr ""

#~ msgid ""
#~ "Are Bones which act in a similar"
#~ " way to switches, in that, they "
#~ "control how other bones or objects "
#~ "react when they are transformed. A "
#~ "Control Bone could for example act "
#~ "as a sliding switch control when "
#~ "the bone is in one position to "
#~ "the left it could indicate to "
#~ "other bones that they react in a"
#~ " particular way when transformed, when "
#~ "the Control Bone is positioned to "
#~ "the right, transforming other bones or"
#~ " objects could do something completely "
#~ "different. Control Bones are not "
#~ "directly used to alter the positions "
#~ "of vertices, in fact, Control Bones "
#~ "often have no vertices directly "
#~ "associated with themselves."
#~ msgstr ""

#~ msgid ""
#~ "When using the Armature Deform With "
#~ "Empty Groups parenting method Vertex "
#~ "Groups on the Child Object will "
#~ "only be created for Armature Bones "
#~ "which are setup as Deforming Bone "
#~ "types. If a Bone is a Control "
#~ "Bone no Vertex Group will be "
#~ "created on the Child Object for "
#~ "that bone."
#~ msgstr ""

#~ msgid ""
#~ "To check whether a particular bone "
#~ "in an armature is a Deforming Bone"
#~ " simply switch to Pose or Edit "
#~ "Mode on the armature and select "
#~ "the bone you are interested in by"
#~ " :kbd:`RMB` it. Once the bone of "
#~ "interest is selected navigate to "
#~ ":menuselection:`Properties Editor --> Bone -->"
#~ " Deform Panel` and check if the "
#~ "Deform tickable option is ticked or "
#~ "not. If it is the selected bone"
#~ " is a Deforming Bone, otherwise, it"
#~ " is a Control Bone."
#~ msgstr ""

#~ msgid "Three Bone Armature in *Pose* Mode with 1st bone selected."
#~ msgstr ""

#~ msgid "Armature Deform With Automatic Weights"
#~ msgstr ""

#~ msgid ""
#~ "Armature Deform With Automatic Weights "
#~ "parenting feature does everything Armature "
#~ "Deform With Empty Groups does with "
#~ "one extra thing. That extra thing "
#~ "is that unlike Armature Deform With "
#~ "Empty Groups which leaves the "
#~ "automatically created Vertex Groups empty "
#~ "with no vertices assigned to them; "
#~ "Armature Deform With Automatic Weight "
#~ "will try to calculate how much "
#~ "Influence Weight a particular Armature "
#~ "Bone would have on a certain "
#~ "collection of vertices based on the "
#~ "distance from those vertices to a "
#~ "particular Armature Bone."
#~ msgstr ""

#~ msgid ""
#~ "Once Blender has calculated the "
#~ "Influence Weight vertices should have it"
#~ " will assign that Influence Weight to"
#~ " the Vertex Groups that were "
#~ "previously created automatically by Blender"
#~ " on the Child Object when Armature"
#~ " Deform With Automatic Weights parenting"
#~ " tool was carried out."
#~ msgstr ""

#~ msgid ""
#~ "If all went well it should be "
#~ "possible to select the Armature Object"
#~ " switch it into Pose Mode and "
#~ "transform the bones of the Armature "
#~ "and the Child Object should deform "
#~ "in response. Unlike Armature Deform "
#~ "parenting you will not have to "
#~ "create Vertex Groups on the Child "
#~ "Object, neither will you have to "
#~ "assign Influences Weights to those "
#~ "Vertex Groups, Blender will try to "
#~ "do it for you."
#~ msgstr ""

#~ msgid ""
#~ "To activate Armature Deform With "
#~ "Automatic Weights you must be in "
#~ "Object Mode or Pose Mode, then "
#~ "select all the Child Objects (usually"
#~ " Mesh Object Types) and lastly select"
#~ " the Armature Object; Once done press"
#~ " :kbd:`Ctrl-P` and select the Armature "
#~ "Deform With Automatic Weights from the"
#~ " Set Parent To pop-up menu."
#~ msgstr ""

#~ msgid ""
#~ "This method of parenting is certainly"
#~ " easier setup but it can often "
#~ "lead to Armatures which do not "
#~ "deform Child Objects in ways you "
#~ "would want as Blender can get a"
#~ " little confused when it comes to "
#~ "determining which Bones should influence "
#~ "certain vertices when calculating Influence"
#~ " Weights for more complex armatures "
#~ "and Child Objects. Symptoms of this "
#~ "confusion are that when transforming the"
#~ " Armature Object in Pose Mode parts"
#~ " of the Child Objects do not "
#~ "deform as you expect; If Blender "
#~ "does not give you the results you"
#~ " require you will have to manually"
#~ " alter the Influence Weights of "
#~ "vertices in relation to the Vertex "
#~ "Groups they belong to and have "
#~ "influence in."
#~ msgstr ""

#~ msgid "Armature Deform With Envelope Weights"
#~ msgstr ""

#~ msgid ""
#~ "Works in a similar way to Armature"
#~ " Deform With Automatic Weights in "
#~ "that it will create Vertex Groups "
#~ "on the Child Objects that have "
#~ "names matching those of the Parent "
#~ "Object Armature Bones. The created "
#~ "Vertex Groups will then be assigned "
#~ "Influence Weights. The major difference "
#~ "is in the way those Influence "
#~ "Weights are calculated."
#~ msgstr ""

#~ msgid ""
#~ "Influence Weights that are calculated "
#~ "when using Armature Deform With Envelope"
#~ " Weights parenting are calculated entirely"
#~ " visually using :ref:`Bone Envelopes "
#~ "<armature-bones-envelope>`."
#~ msgstr ""

#~ msgid "Single Armature Bone in Edit Mode with Envelope Weight display enabled."
#~ msgstr ""

#~ msgid "The gray volume around the bone is the Bone Envelope."
#~ msgstr ""

#~ msgid ""
#~ "Fig. :ref:`fig-view3d-parent-envelope` "
#~ "shows a single Armature Bone in "
#~ "Edit Mode with Envelope Weight "
#~ "activated. The gray semi-transparent "
#~ "volume around the bone is the Bone"
#~ " Envelope."
#~ msgstr ""

#~ msgid ""
#~ "Any Child Object that has vertices "
#~ "inside the volume of the Bone "
#~ "Envelope will be influenced by the "
#~ "Parent Object Armature when the Armature"
#~ " Deform With Envelope Weights operator "
#~ "is used. Any vertices outside the "
#~ "Bone Envelope volume will not be "
#~ "influenced. When the bones are "
#~ "transformed in Pose Mode the results "
#~ "are very different."
#~ msgstr ""

#~ msgid ""
#~ "If you alter the Bone Envelope "
#~ "volume of a bone so that you "
#~ "can have it include/exclude certain "
#~ "vertices after you have already used "
#~ "Armature Deform With Envelope Weights, "
#~ "by default, the newly included/excluded "
#~ "vertices will not be affected by "
#~ "the change. When using Armature Deform"
#~ " With Envelope Weights it only "
#~ "calculates which vertices will be "
#~ "affected by the Bone Envelope volume "
#~ "at the time of parenting, at which"
#~ " point it creates the required named"
#~ " Vertex Groups and assigns vertices "
#~ "to them as required. If you want"
#~ " any vertices to take account of "
#~ "the new Bone Envelope volume size "
#~ "you will have to carry out the "
#~ "Armature Deform With Envelope Weights "
#~ "parenting again; In fact, all parenting"
#~ " used in the Set Parent To "
#~ "pop-up menu which tries to "
#~ "automatically assign vertices to Vertex "
#~ "Groups works like this."
#~ msgstr ""

