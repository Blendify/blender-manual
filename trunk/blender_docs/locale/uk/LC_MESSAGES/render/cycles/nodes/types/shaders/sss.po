# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is public domain as CC0
# This file is distributed under the same license as the Blender 2.77 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
# urko <urkokul@gmail.com>, 2017.
#
msgid ""
msgstr "Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: urko <urkokul@gmail.com>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Generator: Poedit 2.0.2\n"
"Language: uk\n"

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:4
msgid "Subsurface Scattering Node"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:10
msgid "Subsurface Scattering Node."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:12
msgid ""
"The *Subsurface Scattering* node is used to add simple subsurface multiple "
"scattering, for materials such as skin, wax, marble, milk and others. For "
"these materials, rather than light being reflect directly off the surface, "
"it will penetrate the surface and bounce around internally before getting "
"absorbed or leaving the surface at a nearby point."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:17
msgid ""
"How far the color scatters on average can be configured per RGB color "
"channel. For example, for skin, red colors scatter further, which gives "
"distinctive red-colored shadows, and a soft appearance."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:23
msgid "Inputs"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:25
msgid "Color"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:26
msgid ""
"Color of the surface, or physically speaking, the probability that light is "
"reflected for each wavelength."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:27
msgid "Scale"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:28
msgid "Global scale factor for the scattering radius."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:29
msgid "Radius"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:30
msgid ""
"Scattering radius for each RGB color channel, the maximum distance that "
"light can scatter."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:32
msgid "Sharpness"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:32
msgid ""
"Used only with *Cubic* falloff. Values increasing from 0 to 1 prevents "
"softening of sharp edges and reduces unwanted darkening."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:34
msgid "Normal"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:35
msgid ""
"Normal used for shading; if nothing is connected the default shading normal "
"is used."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:46
msgid "Texture Blur"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:37
msgid ""
"How much of the texture will be blurred along with the lighting, mixing the "
"texture at the incoming and outgoing points on the surface. Note that the "
"right choice depends on the texture. Consider for example a texture created "
"from a photograph of skin, in this cases the colors will already be pre-"
"blurred and texture blur could be set to 0. Even for hand painted textures "
"no or minimal blurring might be appropriate, as a texture artist would "
"likely paint in softening already, one would usually not even know what an "
"unblurred skin texture looks like, we always see it blurred. For a "
"procedural texture on the other hand this option would likely have a higher "
"value."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:49
msgid "Properties"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:65
msgid "Falloff"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:52
msgid "Lighting distance falloff function."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:54
msgid "Cubic"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:55
msgid ""
"Is a sharp falloff useful for many simple materials. The function is :math:"
"`(radius - x)^3`."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:61
msgid "Gaussian"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:57
msgid ""
"Gives a smoother falloff following a normal distribution, which is "
"particularly useful for more advanced materials that use measured data that "
"was fitted to one or more such Gaussian functions. The function is :math:"
"`e^{-8x^2/ radius^2}`, such that the radius roughly matches the maximum "
"falloff distance. To match a given measured variance *v*, set :math:`radius "
"= sqrt(16 × v)`."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:65
msgid "Christensen-Burley"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:64
msgid ""
"Is an approximation to physically based volume scattering. Gives less blurry "
"results than Cubic and Gaussian functions."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:68
msgid "Outputs"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:72
msgid "BSSRDF"
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:71
msgid ""
":abbr:`BSSRDF (Bidirectional subsurface scattering distribution function)` "
"shader output."
msgstr ""

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:75
msgid "Examples"
msgstr "Приклади"

#: ../../manual/render/cycles/nodes/types/shaders/sss.rst:79
msgid "A skin-toned SSS shader with color radius (1.0, 0.8, 0.5)."
msgstr ""
