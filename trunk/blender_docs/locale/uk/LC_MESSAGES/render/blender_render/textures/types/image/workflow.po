# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Intl. License
# This file is distributed under the same license as the Blender 2.77 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr "Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: urko <urkokul@gmail.com>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Generator: Poedit 2.0.2\n"
"Language: uk\n"

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:4
msgid "Workflow"
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:6
msgid "The process consists of the following steps:"
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:8
msgid ""
"Create the Mesh. :doc:`Unwrap "
"</editors/uv_image/uv_editing/unwrapping/index>` it into one or more "
":doc:`UV Layouts </editors/uv_image/uv_editing/layout_management>`."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:10
msgid "Create one or more Materials for the Mesh."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:11
msgid ""
"Create one or more images for each UV Layout and aspect of the texture. "
"Either - Paint directly on the mesh using Texture Paint in the 3D View, -"
" Load and/or edit an image in the UV/Image Editor, or - Bake the existing"
" materials into an image for the UV/Image Editor."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:15
msgid ""
"Apply those images as UV Textures to the mesh to affect one or more "
"aspects of the mesh. This is done by using one or more of the numerous "
"Map To options. For example, - Map to Color to affect the diffuse "
"coloring of the mesh, - Map to Nor to affect the normal direction to give"
" the surface a bumpy or creased look, or - Map to Spec (specularity) to "
"make certain areas look shiny and oily."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:20
msgid "Layer the Textures to create a convincing result."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:24
msgid "Using Images and Materials"
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:26
msgid ""
"To use an image as the color and alpha (transparency) of the texture, you"
" can create an image in an external paint program and tell the UV/Image "
"Editor to Open that file as the texture, or you can create a New image "
"and save it as the texture."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:30
msgid ""
"If you want to start off by creating an image using an external paint "
"program, you will want to save an outline of your UV faces by using the "
"*Save UV Face Layout* tool located in the UVs menu. This is discussed "
":ref:`here <uv-image-export-layout>`."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:36
msgid "Creating an Image Texture"
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:38
msgid ""
"To create an image within Blender, you have to first create a :doc:`New "
"Blank </editors/uv_image/uv_editing/applying_image>` Image with a uniform"
" color or test grid. After that, you can color the image using the:"
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:43
msgid "Vertex colors as the basis for an image."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:44
msgid "Render Bake image based on how the mesh looks in the scene."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:46
msgid ""
"After you have created your image, you can modify it using Blender's "
"built-in :doc:`Texture Paint "
"</sculpt_paint/painting/texture_paint/introduction>` or any external "
"image painting program."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:52
msgid "See Texture in 3D View but does not Render"
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:54
msgid ""
"You may be able to see the texture in Textured display mode in the 3D "
"View; this is all that is required to have textures show up in Blender's "
"Game Engine. Rendering, however, requires a material. You must have a "
"*Face Textures* material assigned to the mesh for it to render using the "
"UV Texture. In the Material settings, Add New material to a selected "
"object and enable *Face Textures*."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:62
msgid "Examples"
msgstr "Приклади"

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:64
msgid ""
"There may be one UV Layout for the face of a character, and another for "
"their clothes. Now, to texture the clothes, you need to create an image "
"at least for the Color of the clothes, and possible a \"bump\" texture to"
" give the fabric the appearance of some weave by creating a different "
"image for the Normal of the clothes. Where the fabric is worn, for "
"example at the elbows and knees, the sheen, or Specularity, of the fabric"
" will vary and you will want a different image that tells Blender how to "
"vary the Specularity. Where the fabric is folded over or creased, you "
"want another image that maps Displacement to the mesh to physically "
"deform the mesh. Each of these are examples of applying an image as a "
"texture to the mesh."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:74
msgid ""
"As another example, the face is the subject of many questions and "
"tutorials. In general, you will want to create a Material that has the "
"basic skin color, appropriate shaders, and sub-surface scattering. Then "
"you will want to layer on additional UV Textures for:"
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:78
msgid "Freckle map for Color and Normal aspects."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:79
msgid "Subdermal veins and tendons for Displacement."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:80
msgid "Creases and Wrinkles and skin cell stratification for Normal."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:81
msgid "Makeup images for Color."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:82
msgid "Oily maps for Specularity."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:83
msgid "For a zombie, Alpha transparency where the flesh has rotted away."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:84
msgid "Under chin and inside nostrils that receive less Ambient light."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:85
msgid "Thin skin is more translucent, so a map is needed for that."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:87
msgid ""
"Each image is mapped by using another Texture Channel. Each of these maps"
" are images which are applied to the different aspects (Color, Normal, "
"Specularity) of the image. Tileable images can be repeated to give a "
"smaller, denser pattern by using the Texture controls for repeat or size."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:94
msgid "Layering UV Textures"
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:101
msgid "Base UV Texture."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:106
msgid "Layered UV Texture."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:109
msgid ""
"Great textures are formed by layering images on top of one another. You "
"start with a base layer, which is the base paint. Each successive layer "
"on top of that is somewhat transparent to let the bottom layers show "
"through, but opaque where you want to add on to details."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:114
msgid ""
"To avoid massive confusion, all image textures for a mesh usually use the"
" same UV map. If you do, each image will line up with the one below it, "
"and they will layer on top of one another like the examples shown to the "
"right. To do this, just create one UV Texture (map) as described in this "
"section. Then, create material image textures as described in the "
"procedural materials section. Instead of mapping to Original Coordinates "
"(OrCo), map to UV."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:121
msgid ""
"Use that map name repeatedly in the :menuselection:`Material --> Textures"
" --> Map Input` panel by selecting *UV* and typing the name in the text "
"field. In the example to the right, our UV Texture is called \"Head\" "
"(you may have to expand the image to see the panel settings). Then, the "
"image texture shown will be mapped using the UV coordinates. In the "
"\"Base UV Texture\" example to the right, the face has two textures UV "
"mapped; one for a base color, and another for spots, blemishes and "
"makeup."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:128
#, python-format
msgid ""
"Both textures use the same UV Texture map as their Map Input, and both "
"affect Color. The Makeup texture is transparent except where there is "
"color, so that the base color texture shows through. Note that the colors"
" were too strong on the image, so they amount of the diffuse color "
"affects is turned down to 60% in the second layer (the blemish layer)."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:134
msgid ""
"Normally, we think of image textures affecting the color of a mesh. "
"Realism and photo-realistic rendering is a combination of many different "
"ways that light interacts with the surface of the mesh. The image texture"
" can be Mapped To not only color, but also *Normal* (bumpiness) or "
"*Reflection* or any of the other attributes specified in the Map To "
"panel."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:140
msgid ""
"If you paint a gray-scale image (laid out according to the UV Layout) "
"with white where the skin is oily and shiny, and dark where it is not, "
"you would map that input image according to the UV Layout, but have it "
"affect Specularity (not color)."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:145
msgid ""
"To make portions of a mesh transparent and thus reveal another mesh "
"surface underneath, you would paint a gray-scale image with black where "
"you want the texture transparent, map input to UV, and map it to Alpha "
"(not color). To make portions of a mesh, like a piece of hot metal, "
"appear to glow, you would use a gray-scale image mapped to Emit."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:150
msgid ""
"Believe it or not, this is only \"the tip of the iceberg!\" If everything"
" that is been described here just is not enough for you, the *texture "
"nodes* feature, introduced in recent versions of Blender, enables you to "
"layer and combine textures in almost any way you can imagine."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:157
msgid "Mix and Match Materials"
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:162
msgid ""
"You can mix and match procedural materials and textures, vertex paint, "
"and UV textures onto the same mesh."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:165
msgid ""
"The image to the right has a world with a red ambient light. The material"
" has both Vertex Color Paint and Face Textures enabled, and receives half"
" of ambient light. A weak cloud texture affects color, mixing in a tan "
"color. The right vertices are vertex painted yellow and the left is "
"unpainted procedural gray. The UV Texture is a stock arrow image from the"
" public domain texture CD. Scene lighting is a white light off to the "
"right. From this information and the User Manual thus far, you should now"
" be able to recreate this image."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:174
msgid ""
"You can also assign :ref:`multiple materials <bi-multiple-materials>` to "
"the mesh based on which faces you want to be procedural and which you "
"want to be texture-mapped. Just do not UV map the faces you want to be "
"procedural."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:178
msgid ""
"You can use UV Textures and Vertex Paint (:kbd:`V` in the 3D View) "
"simultaneously, if both are enabled in the Material settings. The vertex "
"colors are used to modulate the brightness or color of the UV image "
"texture:"
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:182
msgid "UV Texture is at the base *(Face Textures)*"
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:183
msgid "Vertex paint affects its colors, then"
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:184
msgid "Procedural textures are laid on top of that,"
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:185
msgid ""
"Area lights shine on the surface, casting shadows and what not, and "
"finally"
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:186
msgid "Ambient light lights it up."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:191
msgid "Vertex colors modulate texture."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:194
msgid ""
"A UV Layout can only have one image, although you can tile and animate "
"the image. Since a layout is a bunch of arranged UV Maps, and a UV Map "
"maps many mesh faces, a face can therefore only have one UV Texture "
"image, and the UV coordinates for that face must fit entirely on the "
"image. If you want a face to have multiple images, split the face into "
"parts, and assign each part its own image. *(Or* you can get fancy with "
"Nodes, but that is another story ...)"
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:204
msgid "Using Alpha Transparency"
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:210
msgid "Alpha UV Textures."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:213
msgid ""
"Alpha 0.0 (transparent) areas of a UV Image render as black. Unlike a "
"procedural texture, they do not make the base material transparent, since"
" UV Textures do not operate on the base procedural material. The UV "
"texture overrides any procedural color underneath. Procedural Textures "
"are applied on top of UV Textures, so a procedural image texture would "
"override any UV Texture. Transparent (black) areas of a procedural "
"texture mapped to alpha operate on top of anything else, making the "
"object transparent in those places. The only thing that modulates visible"
" parts of a UV Texture are the Vertex Colors. In the example to the "
"right, the finger image is transparent at the cuff and top of the finger "
"and is used as a UV Texture. All three balls have a base material of blue"
" and a marbling texture. The base material color is not used whenever "
"Face Textures is enabled."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:227
msgid ""
"The top left ball has not had any vertex painting, and the finger is "
"mapped to the middle band, and the texture is mapped to a pink color. As "
"you can see, the base material has Vertex Color Paint and Face Textures "
"enabled; the base color blue is not used, but the texture is. With no "
"vertex painting, there is nothing to modulate the UV Texture colors, so "
"the finger shows as white. Transparent areas of the UV Image show as "
"black."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:234
msgid ""
"The top right ball has had a pink vertex color applied to the vertical "
"band of faces (in the 3D View editor, select the faces in UV Paint Mode, "
"switch to Vertex Paint Mode, pick a pink color, and :menuselection:`Paint"
" --> Set Vertex Colors`). The finger is mapped to the middle vertical "
"band of faces, and Vertex Color and Face Textures are enabled. The "
"texture is mapped to Alpha black and multiplies the base material alpha "
"value which is 1.0. Thus, white areas of the texture are 1.0, and 1.0 "
"times 1.0 is 1.0 so that area is opaque and shows. Black areas of the "
"procedural texture, 0.0, multiply the base material to be transparent. As"
" you can see, the unmapped faces (left and right sides of the ball) show "
"the vertex paint (none, which is gray) and the painted ones show pink, "
"and the middle stripe that is both painted and mapped change the white UV"
" Texture areas to pink. Where the procedural texture says to make the "
"object transparent, the green background shows through. Transparent areas"
" of the UV Texture insist on rendering black."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:250
msgid ""
"The bottom ball uses multiple materials. Most of the ball (all faces "
"except the middle band) is a base material that does not have Face "
"Textures (nor Vertex Color Paint) enabled. Without it enabled, the base "
"blue material color shows and the pink color texture is mixed on top. The"
" middle band is assigned a new material (2 Mat 2) that *does* have vertex"
" paint and Face Textures enabled. The middle band of faces were vertex "
"painted yellow, so the white parts of the finger are yellow. Where the "
"pink texture runs over the UV texture, the mixed color changes to green, "
"since pink and yellow make a green."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:260
msgid ""
"If you want the two images to show through one another, and mix together,"
" you need to use Alpha. The base material can have an image texture with "
"an Alpha setting, allowing the underlying UV Texture to show through."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:264
msgid "To overlay multiple UV images, you have several options:"
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:266
msgid ""
"Create multiple UV Textures which map the same, and then use different "
"images (with Alpha) and Blender will overlay them automatically."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:268
msgid ""
"Use the :doc:`Composite Nodes </compositing/index>` to combine the two "
"images via the Alpha Over node, creating and saving the composite image. "
"Open that composited image as the UV Texture."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:270
msgid ""
"Use an external paint program to alpha overlay the images and save the "
"file, and load it as the face's UV Texture"
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:272
msgid ""
"Define two objects, one just inside the other. The inner object would "
"have the base image, and the outer image the overlaid image with a "
"material alpha less than one (1.0)."
msgstr ""

#: ../../manual/render/blender_render/textures/types/image/workflow.rst:275
msgid ""
"Use the :doc:`Material nodes "
"</render/blender_render/materials/nodes/index>` to combine the two images"
" via the Alpha Over or Mix node, thus creating a third noded material "
"that you use as the material for the face. Using this approach, you will "
"not have to UV map; simply assign the material to the face using the "
"Multiple Materials."
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "The process consists of the following steps."
#~ msgstr ""

#~ msgid ""
#~ "Use that map name repeatedly in "
#~ "the :menuselection:`Material --> Textures -->"
#~ " Map Input` panel by selecting "
#~ ":guilabel:`UV` and typing the name in"
#~ " the text field. In the example "
#~ "to the right, our UV Texture is"
#~ " called \"Head\" (you may have to "
#~ "expand the image to see the panel"
#~ " settings). Then, the image texture "
#~ "shown will be mapped using the UV"
#~ " coordinates. In the \"Base UV "
#~ "Texture\" example to the right, the "
#~ "face has two textures UV mapped; "
#~ "one for a base color, and another"
#~ " for spots, blemishes and makeup."
#~ msgstr ""

