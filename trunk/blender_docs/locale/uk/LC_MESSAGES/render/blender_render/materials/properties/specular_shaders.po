# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is public domain as CC0
# This file is distributed under the same license as the Blender Reference
# Manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr "Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: urko <urkokul@gmail.com>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Generator: Poedit 2.0.2\n"
"Language: uk\n"

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:5
msgid "Specular Shaders"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:7
#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:94
#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:127
#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:166
#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:205
#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:237
msgid "Reference"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst
msgid "Mode:     All Modes"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst
msgid "Panel:    :menuselection:`Material --> Specular`"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:14
msgid ""
"Specular shaders create the bright highlights that one would see on a "
"glossy surface, mimicking the reflection of light sources. Unlike "
":doc:`diffuse shading "
"</render/blender_render/materials/properties/diffuse_shaders>`, specular "
"reflection is *viewpoint dependent*. According to Snell's Law, light "
"striking a specular surface will be reflected at an angle which mirrors "
"the incident light angle (with regard to the surface's normal), which "
"makes the viewing angle very important."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:21
msgid "Not a Mirror!"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:23
msgid ""
"It is important to stress that the *specular reflection* phenomenon "
"discussed here is not the reflection we would see in a mirror, but rather"
" the light highlights we would see on a glossy surface. To obtain true "
"mirror-like reflections you would need to use the internal raytracer."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:30
msgid "Common Options"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:32
msgid "Each specular shader share the following common options:"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:34
msgid "Specular Color"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:35
msgid "The color of the specular highlight"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:36
msgid "Intensity"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:37
msgid ""
"The intensity, or brightness of the specular highlight. This has a range "
"of [0-1]."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:41
msgid "Ramp"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:39
msgid ""
"Allows you to set a range of specular colors for *Material*, and define "
"how the range will vary over a surface. See :doc:`Ramps "
"</render/blender_render/materials/properties/ramps>` for details."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:43
msgid ""
"As a result, a material has at least two different colors, a diffuse, and"
" a specular one. The specular color is normally set to pure white (the "
"same \"pure white\" as the reflected light source), but it can be set to "
"different values for various effects (e.g. metals tend to have colored "
"highlights)."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:51
msgid "Technical Details"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:55
msgid "Specular Reflection."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:58
msgid ""
"In reality, the quality of Diffuse and Specular reflection are generated "
"during the same process of light scattering, but are not the same. "
"Diffusion is actually subsurface scattering at a very small scale."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:62
msgid ""
"Imagine that a surface is made up of extremely microscopic semi-"
"transparent, reflective facets. The sharpness of Specular reflection is "
"determined by the distribution of the angle of these microfacets on the "
"surface of an object. The more deep and jagged these facets are, the more"
" the light spreads when it hits the surface. When these facets are "
"flatter against the \"macrosurface\", the surface will have a tighter "
"reflection, closer to a mirror. This is a condensed explanation of the "
"generally accepted microfacet theory of reflectance, which is the basis "
"of all modern BRDFs (Bi-directional Reflectance Distribution Functions), "
"or shading models."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:73
msgid ""
"Because these microfacets are transparent, some light that hits them "
"travels into the surface and diffuses. The light that makes it back out "
"is roughly Lambertian most of the time, meaning that it spreads evenly in"
" all directions. It is also attenuated by the pigmentation in the "
"surface, hence creating what we perceive as diffuse, and the color of an "
"object."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:80
msgid ""
"Note that at glancing angles, the reflectivity of a surface will always "
"go to 1."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:82
msgid ""
"If it is difficult for you to understand this relationship, try to "
"imagine a ball (say, of centimeter scale): if you throw it against a wall"
" of raw stones (with a scale of roughness of a decimeter), it will bounce"
" in a different direction each time, and you will likely quickly lose it!"
" On the other hand, if you throw it against a smooth concrete wall (with "
"a roughness of, say, a millimeter scale), you can quite easily anticipate"
" its bounce, which follow (more or less!) the same law as the light "
"reflection."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:92
msgid "Cook-Torrance"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst
msgid "Panel:    :menuselection:`Material --> Shaders`"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:103
msgid "Cook-Torrance Shader (Lambert 0.8)."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:106
msgid ""
"Cook-Torrance is a basic specular shader that is most useful for creating"
" shiny plastic surfaces. It is a slightly optimized version of Phong. "
"Robert L. Cook (LucasFilm) and Kenneth E. Torrance (Cornell University) "
"In their 1982 paper `A Reflectance Model for Computer Graphics "
"<https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.83.7263&rep=rep1&type=pdf>`__"
" (PDF), they described \"a new reflectance model for rendering computer "
"synthesized images\" and applied it to the simulation of metal and "
"plastic."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:118
#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:149
#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:190
#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:222
#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:262
msgid "Options"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:122
#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:153
#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:193
msgid "Hardness"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:121
msgid "Size of the specular highlight"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:125
msgid "Phong"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:136
msgid "Phong Shader (Lambert 0.8)."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:139
msgid ""
"Phong is a basic shader that is very similar to CookTorr, but is better "
"for skin and organic surfaces. `Bui Tuong Phong "
"<https://en.wikipedia.org/wiki/Bui_Tuong_Phong>`__ (1942-1975) was a "
"Vietnamese-born computer graphics pioneer that developed the first "
"algorithm for simulating specular phenomenon. `His model "
"<https://en.wikipedia.org/wiki/Phong_reflection_model>`__ included "
"components not only for specular lighting, but also diffuse and ambient "
"lighting."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:152
#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:225
msgid "Size of the specular highlight."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:155
msgid "Planet Atmosphere"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:157
msgid ""
"Because of its fuzziness, this shader is good for atmosphere around a "
"planet. Add a sphere around the planet, slightly larger than the planet. "
"For its material, use a phong specular shader. Set it to a very low alpha"
" (.05), zero diffuse, low hardness (5) but high specularity (1)."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:164
msgid "Blinn"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:175
msgid "Blinn Shader (Oren-Nayar Int 0.8, Rough 0.5)."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:177
msgid ""
"Blinn is a more 'physical' specular shader, often used with the Oren-"
"Nayar diffuse shader. It can be more controllable because it adds a "
"fourth option, an :term:`index of refraction`, to the aforementioned "
"three. `James F. Blinn <https://en.wikipedia.org/wiki/Jim_Blinn>`__ "
"worked at NASA's Jet Propulsion Laboratory and became widely known for "
"his work on Carl Sagan's TV documentary *Cosmos*. The model he described "
"in his 1977 paper `Models of Light Reflection for Computer Synthesized "
"Pictures <https://www.microsoft.com/en-us/research/publication/models-of-"
"light-reflection-for-computer-synthesized-pictures/>`__ (PDF) included "
"changes in specular intensity with light direction and more accurately "
"positioned highlights on a surface."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:193
msgid ""
"Size of the specular highlight. The Blinn shader is capable of much "
"tighter specular highlights than Phong or CookTorr."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:200
msgid "IOR"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:196
msgid ""
"'Index of Refraction'. This parameter is not actually used to compute "
"refraction of light rays through the material (a ray tracer is needed for"
" that), but to correctly compute specular reflection intensity and "
"extension via Snell's Law."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:203
msgid "Toon"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:214
msgid "Toon Specular Shader (Toon Diffuse, Int 0.8, Size & Smooth match)."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:217
msgid ""
"The Toon specular shader matches the Toon diffuse shader. It is designed "
"to produce the sharp, uniform highlights of cartoon cels."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:224
msgid "Size"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:227
msgid "Smooth"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:227
msgid "Softness of the highlight's edge."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:229
msgid "Alternative Method"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:231
msgid ""
"The Toon shader effect can also be accomplished in a more controllable "
"way using color ramps."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:235
msgid "Ward Isotropic"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:246
msgid "Ward isotropic Shader."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:249
msgid ""
"Ward isotropic is a flexible specular shader that can be useful for metal"
" or plastic."
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:259
msgid "Gregory J. Ward"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:252
msgid ""
"developed a relatively simple model that obeyed the most basic laws of "
"physics. In his 1992 paper, \"Measuring and modeling anisotropic "
"reaction\", Ward introduced a Bidirectional Reflectance Distribution "
"Function (BRDF) since then widely used in computer graphics because the "
"few parameters it uses are simple to control. His model could represent "
"both isotropic surfaces (independent of light direction) and anisotropic "
"surfaces (direction dependent). In Blender, the Ward specular shader is "
"still called \"Ward Isotropic\" but is actually anisotropic. (`PDF "
"<https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.69.6812&rep=rep1&type=pdf>`__)"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:270
msgid "Slope"
msgstr ""

#: ../../manual/render/blender_render/materials/properties/specular_shaders.rst:265
msgid ""
"Standard deviation for of surface slope. Previously known as the `root-"
"mean-square <https://en.wikipedia.org/wiki/Root_mean_square>`__ or rms "
"value, this parameter in effect controls the size of the specular "
"highlight, though using a different method to that of the other specular "
"shaders. It is capable of extremely sharp highlights."
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "CookTorr Shader (Lambert 0.8)"
#~ msgstr ""

#~ msgid "Phong Shader (Lambert 0.8)"
#~ msgstr ""

#~ msgid "Blinn Shader (Oren-Nayar Int 0.8, Rough 0.5)"
#~ msgstr ""

#~ msgid "Toon Specular Shader (Toon Diffuse, Int 0.8, Size & Smooth match)"
#~ msgstr ""

#~ msgid "WardIso Shader"
#~ msgstr ""

#~ msgid "Panel:    Shading/Material Context --> Specular"
#~ msgstr ""

#~ msgid "Panel:    Shading/Material Context --> Shaders"
#~ msgstr ""

#~ msgid "CookTorr"
#~ msgstr ""

#~ msgid "CookTorr Shader (Lambert 0.8)."
#~ msgstr ""

#~ msgid "WardIso"
#~ msgstr ""

#~ msgid "WardIso Shader."
#~ msgstr ""

#~ msgid ""
#~ "It is important to stress that the"
#~ " *specular reflection* phenomenon discussed "
#~ "here is not the reflection we "
#~ "would see in a mirror, but rather"
#~ " the light highlights we would see"
#~ " on a glossy surface. To obtain "
#~ "true mirror-like reflections you would"
#~ " need to use the internal raytracer."
#~ " Please refer to section :doc:`rendering"
#~ " </render/index>` of this manual."
#~ msgstr ""

