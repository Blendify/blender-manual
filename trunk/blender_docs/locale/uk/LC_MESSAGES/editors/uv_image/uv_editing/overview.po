# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is public domain as CC0
# This file is distributed under the same license as the Blender 2.77 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr "Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: urko <urkokul@gmail.com>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Generator: Poedit 2.0.2\n"
"Language: uk\n"

#: ../../manual/editors/uv_image/uv_editing/overview.rst:4
msgid "Overview"
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:6
msgid ""
"The most flexible way of mapping a 2D texture over a 3D object is a "
"process called \"UV mapping\". In this process, you take your three-"
"dimensional (X, Y & Z) mesh and unwrap it to a flat two-dimensional (X & "
"Y ... or rather, as we shall soon see, \"U & V\") image. Colors in the "
"image are thus mapped to your mesh, and show up as the color of the faces"
" of the mesh. Use UV texturing to provide realism to your objects that "
"procedural materials and textures cannot do, and better details than "
"Vertex Painting can provide."
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:14
msgid "UVs Explained"
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:16
msgid ""
"The best analogy to understanding UV mapping is cutting up a cardboard "
"box. The box is a three-dimensional (3D) object, just like the mesh cube "
"you add to your scene."
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:19
msgid ""
"If you were to take a pair of scissors and cut a seam or fold of the box,"
" you would be able to lay it flat on a tabletop. As you are looking down "
"at the box on the table, we could say that U is the left-right direction,"
" is V is the up-down direction. This image is thus in two dimensions "
"(2D). We use U and V to refer to these \"texture-space coordinates\" "
"instead of the normal X and Y, which are always used (along with Z) to "
"refer to the three dimensional space (3D)."
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:26
msgid ""
"When the box is reassembled, a certain UV location on the paper is "
"transferred to an (X, Y, Z) location on the box. This is what the "
"computer does with a 2D image in wrapping it around a 3D object."
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:33
msgid "Box being inspected."
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:37
msgid "Box mapped flat."
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:40
msgid ""
"During the UV unwrapping process, you tell Blender exactly how to map the"
" faces of your object (in this case, a box) to a flat image in the "
"UV/Image Editor. You have complete freedom in how to do this. (Continuing"
" our previous example, imagine that, having initially laid the box flat "
"on the tabletop, you now cut it into smaller pieces, somehow stretch "
"and/or shrink those pieces, and then arrange them in some way upon a "
"photograph that is also lying on that tabletop)."
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:48
msgid "Cartography Example"
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:50
msgid ""
"Cartographers (map makers) have been dealing with this problem for "
"millennia. A cartography (map-making) example is creating a projection "
"map of the whole world. In cartography, we take the surface of the earth "
"(a sphere) and make a flat map that can be folded up into the glove "
"compartment aboard the space shuttle. We \"fill in\" spaces toward the "
"poles, or change the outline of the map in any of several ways:"
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:61
msgid "Mercator Projection."
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:66
msgid "Mollweide Projection."
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:71
msgid "Albers-equal Projection."
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:74
msgid ""
"Each of these is an example of a way to UV map a sphere. Each of the "
"hundred or so commonly accepted projections has its advantages and "
"disadvantages. Blender allows the same thing anyway we want to, on the "
"computer."
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:78
msgid ""
"On more complex models (like seen in the earth map above) there pops up "
"an issue where the faces cannot be cut, but instead they are stretched in"
" order to make them flat. This helps making easier UV maps, but sometimes"
" adds distortion to the final mapped texture. (Countries and states that "
"are closer to the North or the South Pole look smaller on a flat map than"
" do ones which are close to the Equator.)"
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:87
msgid "Half-Sphere Example"
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:92
msgid "3D Space (XYZ) versus UV Space (click to enlarge)."
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:95
msgid ""
"In this image you can easily see that the shape and size of the marked "
"face in 3D space is different in UV space."
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:98
msgid ""
"This difference is caused by the \"stretching\" (technically called "
"mapping) of the 3D part (XYZ) onto a 2D plane (i.e the UV map)."
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:101
msgid ""
"If a 3D object has a UV map, then, in addition to the 3D-coordinates X, "
"Y, and Z, each point on the object will have corresponding U and V "
"coordinates. (*P* in the image above is an example of how a point on a 3D"
" object might be mapped onto a 2D image.)"
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:107
msgid "Advantages of UVs"
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:109
msgid ""
"While procedural textures (described in the previous chapters) are "
"useful-they never repeat themselves and always \"fit\" 3D objects-they "
"are not sufficient for more complex or natural objects. For instance, the"
" skin on a human head will never look quite right when procedurally "
"generated. Wrinkles on a human head, or scratches on a car do not occur "
"in random places, but depend on the shape of the model and its usage. "
"Manually-painted images, or images captured from the real world gives "
"more control and realism. For details such as book covers, tapestry, "
"rugs, stains, and detailed props, artists are able to control every pixel"
" on the surface using a UV Texture."
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:118
msgid ""
"A UV map describes what part of the texture should be attached to each "
"polygon in the model. Each polygon's vertex gets assigned to 2D "
"coordinates that define which part of the image gets mapped. These 2D "
"coordinates are called UVs (compare this to the XYZ coordinates in 3D). "
"The operation of generating these UV maps is also called \"unwrap\", "
"since it is as if the mesh were unfolded onto a 2D plane."
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:124
msgid ""
"For most simple 3D models, Blender has an automatic set of unwrapping "
"algorithms that you can easily apply. For more complex 3D models, regular"
" Cubic, Cylindrical or Spherical mapping, is usually not sufficient. For "
"even and accurate projection, use seams to guide the UV mapping. This can"
" be used to apply textures to arbitrary and complex shapes, like human "
"heads or animals. Often these textures are painted images, created in "
"applications like the Gimp, Photoshop, or your favorite painting "
"application."
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:131
msgid "Games"
msgstr ""

#: ../../manual/editors/uv_image/uv_editing/overview.rst:133
msgid ""
"UV mapping is also essential in the :doc:`Game Engine "
"</game_engine/index>`, or any other game. It is the de facto standard for"
" applying textures to models; almost any model you find in a game is UV "
"mapped."
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "Box being inspected"
#~ msgstr ""

#~ msgid "Box mapped flat"
#~ msgstr ""

#~ msgid "Mercator Projection"
#~ msgstr ""

#~ msgid "Mollweide Projection"
#~ msgstr ""

#~ msgid "Albers-equal Projection"
#~ msgstr ""

#~ msgid "3D Space (XYZ) versus UV Space (click to enlarge)"
#~ msgstr ""

#~ msgid "The UV Editor"
#~ msgstr ""

#~ msgid "The UV/Image Editor"
#~ msgstr ""

#~ msgid ""
#~ "To learn about the functionalities for"
#~ " UV mapping see the :ref:`UV/Image "
#~ "Editor <editors-uv-image-index>` section"
#~ " for details."
#~ msgstr ""

