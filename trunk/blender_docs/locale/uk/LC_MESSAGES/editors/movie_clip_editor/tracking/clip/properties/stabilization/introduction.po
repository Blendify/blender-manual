# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is licensed under a CC-BY-SA 4.0 Int. License
# This file is distributed under the same license as the Blender 2.78 Manual
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr "Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: urko <urkokul@gmail.com>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Generator: Poedit 2.0.2\n"
"Language: uk\n"

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:4
msgid "Introduction"
msgstr "Вступ"

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:6
msgid ""
"The 2D video stabilization is a feature built on top of Blender's image "
"feature tracking abilities: we use some *tracking points* to remove "
"shakiness, bumps and jerks from video footage. Typically, image "
"stabilization is part of a **2D workflow** to prepare and improve footage"
" prior to further processing or modeling steps. This page helps to "
"understand how it works, introduces related terms and concepts, describes"
" the available interface controls in detail and finally gives some hints "
"about usage in practice."
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:13
msgid "Typical **usage scenarios** of the stabilizer:"
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:15
msgid "fix minor deficiencies (shaky tripod, jerk in camera movement)"
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:16
msgid ""
"\"poor man’s steadycam\" (when a real steadycam was not available, "
"affordable or applicable)"
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:17
msgid "as preparation for masking, matching and rotoscoping"
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:19
msgid ""
"It is not uncommon for 2D stabilization to have to deal with somewhat "
"imperfect and flawed footage."
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:23
msgid "How it works"
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:25
msgid ""
"To detect spurious movement in a given shot, we'll assume a simplified "
"model about this movement. We then try to fit the movement of tracked "
"features with this simplified model to derive a compensation. Of course, "
"this works only to the degree our model is adequate -- yet in practice, "
"this simplified approach works surprisingly well even with rather "
"complicated shots, where our basic assumption was just an approximation "
"of much more elaborate movements."
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:31
msgid ""
"This simplified model underlying the 2D stabilization as implemented here"
" assumes movement by an **affine-linear transform**:"
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:34
msgid "the camera is pushed up/down/sideways by some **translation component**"
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:35
msgid ""
"the image is then **tilted** and **scaled** around a **pivot point** "
"(rotation center)"
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:37
msgid ""
"To compensate movement according to this simplified model, the 2D "
"stabilizer proceeds in two steps. First we try to detect the translation "
"offset from the weighted average of all *translation tracking points*. "
"After compensating this translation component, we then use additional "
"*rotation/scale tracking points* to detect rotation around a given pivot "
"point. Again, we detect rotation and scale changes through a weighted "
"average of all the rotation/scale tracking points given."
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:43
msgid ""
"In the current version, the **pivot point** is anchored to the *weight "
"center of the translation tracking points*. So effectively the detected "
"translation is already factored out. In some cases this is not optimal, "
"especially when tracks have gaps or do not cover the whole duration of "
"the footage -- we plan further options to better control the pivot point "
"in future releases."
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:50
msgid "Stabilization Tracks"
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:52
msgid ""
"Thus, as foundation for any image stabilization, we need tracked image "
"features to derive the movements. These *tracking points* or \"tracks\" "
"can be established with Blender's :doc:`image feature tracking component "
"</editors/movie_clip_editor/tracking/clip/introduction>` The right choice"
" of points to track is somewhat tricky, yet crucial for successful image "
"stabilization. Often, we're here because we'll have to deal with "
"imperfect footage. In such cases, the *averaging of tracks* helps to work"
" around image or tracking errors at some point. Moreover, when the "
"footage contains *perspective induced movements,* symmetrically placed "
"tracking points above and below the horizon can be used to cancel out "
"spurious movement and get stabilization to the focal area in between."
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:65
msgid "Diverging movements caused by perspective."
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:67
msgid "Tracks can be added in two groups"
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:69
msgid ""
"first of all is the list of tracks to be used to compensate for jumps in "
"the camera location. From all the tracking points added to this group, we"
" calculate a *weighted average.* We then try to keep this average "
"location constant during the whole shot. Thus it is a good idea to use "
"tracking markers close to and centered around the most important subject."
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:73
msgid ""
"a second selection of tracks is used to keep the rotation and scale of "
"the image constant. You may use the same tracks for both selections. But "
"usually it is best to use tracking points with large distance from the "
"image center, and symmetrically, on both sides, to capture the angular "
"movements more precisely. Similar to the \"location\" case, we calculate "
"an *average angular contribution* and then try to keep this value "
"constant during the whole shot."
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:81
msgid "Footage, Image and Canvas"
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:83
msgid ""
"When talking about the movement stabilization of video, we have to "
"distinguish several frames of reference. The image elements featured by "
"the footage move around irregularly within the footage's **original image"
" boundaries** -- this is the very reason why we are using the stabilizer."
" When our attempt at stabilization was successful, the image elements can"
" be considered *stable* now, while in exchange the footage's image "
"boundaries have taken on irregular movement and jump around in the "
"opposite way. This is the immediate consequence of the stabilizer's "
"activity."
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:90
msgid ""
"Since the actual image elements, i.e the subject of our footage can be "
"considered stable now, we may use these as a new frame of reference: we "
"consider them attached to a fixed backdrop, which we call the **canvas**."
" Introducing this concept of a \"canvas\" helps to deal with deliberate "
"movements of the camera. And beyond that, it yields an additional "
"benefit: It is very frequent for the pixels of video footage to be *non "
"square.* So we have to stretch and expand those pixels, before we're able"
" to preform any sensible rotation stabilization. Thus the canvas becomes,"
" by definition, the reference for an undistorted display of the image "
"contents."
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:97
msgid ""
"But when the camera was *moved intentionally,* we have to consider yet "
"another frame of reference beyond the canvas: namely the frame (or "
"*\"cadre\"*) of the **final image** we want to create. To understand this"
" distinction, let's consider a hand-held, panning shot to the right: "
"Since our camera was turned towards the right side, the actual image "
"contents move towards the left side *within* the original image frame. "
"But let's assume the stabilizer was successful with \"fixing\" any image "
"contents relative to the *canvas* -- which in turn means, that the "
"original image boundaries start to move irregularly towards the right "
"side, and the *contents* of the image will begin to disappear gradually "
"behind the left boundary of the original image. After some amount of "
"panning, we'll have lost all of our original contents and just see an "
"empty black image backdrop. The only solution to deal with that problem "
"is to *move the final image frame along to the right,* thus following the"
" originally intended panning movement. Of course, this time, we do want "
"to perform this newly added panning movement in a smooth and clean way."
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:113
msgid "Stabilizing a panning shot."
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:119
msgid "Restoring the expected camera movement."
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:121
msgid ""
"To allow for such a compensation and to reintroduce deliberate panning, "
"or tilting and zoom of the resulting image, the stabilizer offers a "
"dedicated set of controls: *Expected position*, *Expected rotation* and "
"*Expected scale*. These act like the controls of a virtual camera filming"
" the contents we have fixed onto the canvas. By *animating* those "
"parameters, we're able to perform all kinds of deliberate camera "
"movements in a smooth fashion."
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:132
msgid "The \"dancing\" black Borders"
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:134
msgid ""
"As explained above, when we succeed with stabilizing the image contents, "
"the boundaries of the original footage start to jump around in the "
"opposite direction of the movements compensated. This is inevitable -- "
"yet very annoying, since due to the irregular nature of these movements, "
"these \"dancing black borders\" tend to draw away attention from the "
"actual subject and introduce an annoying restlessness. Thus our goal must"
" be to hide those dancing borders as good as possible. A simple solution "
"is to add a small amount of zoom. Sometimes we'll also need to animate "
"the parameter *Expected position* in order to keep the image centered as "
"good as we can -- this helps to reduce the amount of zoom necessary to "
"remove those annoying borders."
msgstr ""

#: ../../manual/editors/movie_clip_editor/tracking/clip/properties/stabilization/introduction.rst:142
msgid ""
"The **Autoscale function** can be used to find the minimal amount of zoom"
" just sufficient to remove those black borders completely. However, if "
"the camera jumps a lot, the autoscale function often zooms in too much, "
"especially since this calculation aims at finding a single, static zoom "
"factor for the whole duration of the footage. When this happens, you'll "
"typically get overall better results with animating both the zoom factor "
"and the expected position manually."
msgstr ""

