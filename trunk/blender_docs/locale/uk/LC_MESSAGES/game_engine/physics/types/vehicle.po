# SOME DESCRIPTIVE TITLE.
# Copyright (C) : This page is public domain as CC0
# This file is distributed under the same license as the Blender Reference
# Manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr "Project-Id-Version: Blender 2.78 Manual 2.78\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: urko <urkokul@gmail.com>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"
"X-Generator: Poedit 2.0.2\n"
"Language: uk\n"

#: ../../manual/game_engine/physics/types/vehicle.rst:4
msgid "Vehicle Controller Physics"
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:7
msgid "Introduction"
msgstr "Вступ"

#: ../../manual/game_engine/physics/types/vehicle.rst:9
msgid ""
"The Vehicle Controller is a special :ref:`type of physics object <game-"
"engine-physics-types>` that the Physics Engine (bullet) recognizes."
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:12
msgid ""
"It is composed of a *rigid body* representing the chassis and a set of "
"wheels that are set to *no collision*. Emphasizing the distinction "
"between a Game Engine, Logical or Render object and its representation "
"for the Physics Engine is important."
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:17
msgid ""
"To simulate a vehicle as a true rigid body, on top of also rigid body "
"wheels, with a real suspension system made with joints, would be far too "
"complicated and unstable. Cars and other vehicles are complicated "
"mechanical devices and most often we do not want to simulate that, only "
"that it 'acts as expected'. The Vehicle Controller exists to provide a "
"dedicated way of simulating a vehicle behavior without having to simulate"
" all the physics that would actually happen in the real world. It "
"abstracts the complexity away by providing a simple interface with "
"tweakable parameters such as suspension force, damping and compression."
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:27
msgid "How it works"
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:29
msgid ""
"Bullet's approach to a vehicle controller is called a \"Raycast "
"Vehicle\". Collision detection for the wheels is approximated by ray "
"casts and the tire friction is an anisotropic friction model."
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:33
msgid ""
"A raycast vehicle works by casting a ray for each wheel. Using the ray's "
"intersection point, we can calculate the suspension length and hence the "
"suspension force that is then applied to the chassis, keeping it from "
"hitting the ground. In effect, the vehicle chassis 'floats' along on the "
"rays."
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:38
msgid ""
"The friction force is calculated for each wheel where the ray contacts "
"the ground. This is applied as a sideways and forwards force."
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:41
msgid ""
"You can check Kester Maddock's approach to vehicle simulation `here "
"<https://docs.google.com/document/d/18edpOwtGgCwNyvakS78jxMajCuezotCU_0iezcwiFQc/edit>`__."
" It includes some common problems, workarounds and tips and tricks."
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:47
msgid "How to use"
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:49
msgid ""
"Currently the Vehicle Controller can only be used as a constraint via "
"Python. There are plans to add it to the interface."
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:54
msgid "Setup"
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:56
msgid "You should have a body acting as the chassis, set it as a 'Rigid Body'."
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:58
msgid ""
"The wheels should be separate objects set to 'No Collision'. The vehicle "
"controller will calculate the collisions for you as rays so, if you set "
"it to something else, it will calculate it twice in different ways and "
"produce weird results."
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:64
msgid "Collisions"
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:66
msgid ""
"A cylinder is typically a good collision shape for the wheels. For the "
"chassis, the shape should be rough, like a box. If the vehicle is very "
"complicated, you should split it into simpler objects and parent those "
"(with their collision shapes) to the vehicle controller so that they will"
" follow it. If your vehicle even has moving bits (weapons, wrecking "
"balls, trolleys etc) they should also be simulated separately and "
"connected to the vehicle as a joint."
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:76
msgid "Python"
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:79
msgid "Assembling the Vehicle"
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:81
msgid "The overall steps are:"
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:83
msgid "Create a constraint for the vehicle and save its ID for future reference"
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:84
msgid "Attach the wheels"
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:85
msgid ""
"Set wheel parameters: influence, stiffness, damping, compression and "
"friction"
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:86
msgid "Init variables"
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:88
msgid "You can see an example in the file below."
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:91
msgid "Controlling the Vehicle"
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:93
msgid ""
"This is done in two parts and it should be modeled according to the "
"desired behavior. You should think of your gameplay and research "
"appropriate functions for the input. For instance, can the vehicle "
"reverse? jump? drift? does it turn slowly? How much time does it take to "
"brake or get to full speed? The first part is *response to keys*. "
"Whenever the player presses a key, you should set a value accordingly, "
"such as increase acceleration. Example::"
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:107
msgid "The second part is to *compute the movement* according to your functions::"
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:117
msgid "Both should be run each frame."
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:121
msgid "Example"
msgstr ""

#: ../../manual/game_engine/physics/types/vehicle.rst:123
msgid ""
"`demo_file.zip "
"<https://dl.dropboxusercontent.com/u/3226675/blender/vehicle_controller_demo.zip>`__"
" (last update 9 September 2014)"
msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "attach the wheels"
#~ msgstr ""

#~ msgid "init variables"
#~ msgstr ""

#~ msgid ""
#~ "It is composed of a *rigid body*"
#~ " representing the chassis and a set"
#~ " of wheels that are set to *no"
#~ " collision*. Emphasizing the distinction "
#~ "between a GameEngine, Logical or Render"
#~ " object and its representation for "
#~ "the Physics Engine is important."
#~ msgstr ""

